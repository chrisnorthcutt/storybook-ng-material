{
    "pipes": [],
    "interfaces": [
        {
            "name": "DialogData",
            "id": "interface-DialogData-8d1aaa37c838f55fcd50035ede86b5b1eaaa5f49d0b1fd02ed613a3cc0a32e0c4bcdcf30288dea95dd68c97147c369404fa4c6755aef5b2a817815ee094869c1",
            "file": "src/app/dialog/dialog.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\n  import { MAT_DIALOG_DATA } from '@angular/material/dialog';\n \n  interface DialogData {\n    title: string;\n    description: string;\n  }\n@Component({\n  selector: 'app-notification',\n    template: `\n    <div class=\"mat-typography\">\n    <h1>{{data.title}}</h1>\n    <p>{{data.description}}</p>\n    <button mat-stroked-button color=\"primary\" mat-dialog-close label=\"Okay\">Okay</button>\n</div>`\n})\nexport class DialogComponent implements OnInit  {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {\n  }\n\n  ngOnInit(): void {\n  }\n}\n\n\n\n\n  \n \n  \n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Fruit",
            "id": "interface-Fruit-18a5a89e744e13d74fab76f782026294b848694477bf5ef0f2f5c920a32ca86c4cee6c0f95efa556bb9c62ef2c6251651c54ece44d0fdd4abbfb2a1a6a6f3aea",
            "file": "src/app/chip-list/chip-list.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\n\nexport interface Fruit {\n  name: string;\n}\nexport interface Vegetable {\n  name: string;\n}\n\n@Component({\n  selector: 'app-chip-list',\n  templateUrl: './chip-list.component.html',\n  styleUrls: ['./chip-list.component.scss']\n})\nexport class ChipListComponent {\n  addOnBlur = true;\n  readonly separatorKeysCodes = [ENTER, COMMA] as const;\n  fruits: Fruit[] = [{name: 'Lemon'}, {name: 'Lime'}, {name: 'Apple'}];\n\n  add(event: MatChipInputEvent): void {\n    const value = (event.value || '').trim();\n\n    // Add our fruit\n    if (value) {\n      this.fruits.push({name: value});\n    }\n\n    // Clear the input value\n    event.input.value = \"\";\n  }\n\n  remove(fruit: Fruit): void {\n    const index = this.fruits.indexOf(fruit);\n\n    if (index >= 0) {\n      this.fruits.splice(index, 1);\n    }\n  }\n\n\n\n\n@Input()\nType: string[] = ['basic', 'input', 'drag']\n\n\nvegetables: Vegetable[] = [\n  {name: 'apple'},\n  {name: 'banana'},\n  {name: 'strawberry'},\n  {name: 'orange'},\n  {name: 'kiwi'},\n  {name: 'cherry'},\n];\n\ndrop(event: CdkDragDrop<Vegetable[]>) {\n  moveItemInArray(this.vegetables, event.previousIndex, event.currentIndex);\n}\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PropsOptions",
            "id": "interface-PropsOptions-eaaeeb6a935a4b56b210382c634174dc31c9488a2c24cd249c53e7f90bcba6f6a66eceaab3f48218d223343ff74c14fa8c53e35edab9878f6e932e28180c7d55",
            "file": "src/stories/Button.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Story, Meta } from '@storybook/angular/types-6-0';\nimport { ButtonComponent } from '../app/button/button.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { moduleMetadata } from '@storybook/angular';\nimport {\n  previewTemplate,\n  DEFAULT_ANGULAR_CODESANDBOX,\n} from 'storybook-addon-preview';\n\n// More on default export: https://storybook.js.org/docs/angular/writing-stories/introduction#default-export\nexport default {\n  title: 'Base Components/Button',\n\n  // More on argTypes: https://storybook.js.org/docs/angular/api/argtypes\n\n  decorators: [\n    moduleMetadata({\n      imports: [MatButtonModule, MatIconModule],\n    }),\n  ],\n} as Meta;\n\n// More on component templates: https://storybook.js.org/docs/angular/writing-stories/introduction#using-args\n// const Template: Story<ButtonComponent> = (args: ButtonComponent) => ({\n//   props: args,\n// });\n\nconst Template: Story = (args) => ({\n  props: args,\n  argTypes: {\n    Label: { control: 'text' },\n    // Color: { control: 'select', defaultValue:'primary', options: ['primary', 'accent', 'warn'] },\n    Type: {\n      control: 'select',\n      options: ['mat-raised-button', 'mat-stroked-button', 'mat-button'],\n      table: { disable: true },\n    },\n    Disabled: { control: 'boolean' },\n    iconLeft: { control: 'boolean' },\n    iconRight: { control: 'boolean' },\n  },\n  template: `\n   <p> <button \n    mat-button\n    [class]=\"Type\"\n    color=\"primary\"\n    [disabled]=\"Disabled\">\n    <mat-icon *ngIf=\"iconLeft\" style=\"margin-right: 8px;\" >save</mat-icon>\n        <span>{{Label}}</span>\n        \n      <mat-icon *ngIf=\"iconRight\" style=\"margin-left: 8px;\">save</mat-icon>\n    </button></p>\n    <p><button \n    mat-button\n    [class]=\"Type\"\n    color=\"basic\"\n    [disabled]=\"Disabled\">\n    <mat-icon *ngIf=\"iconLeft\" style=\"margin-right: 8px;\" >save</mat-icon>\n        <span>{{Label}}</span>\n        \n      <mat-icon *ngIf=\"iconRight\" style=\"margin-left: 8px;\">save</mat-icon>\n    </button></p>\n    <p><button \n    mat-button\n    [class]=\"Type\"\n    color=\"warn\"\n    [disabled]=\"Disabled\">\n    <mat-icon *ngIf=\"iconLeft\" style=\"margin-right: 8px;\" >save</mat-icon>\n        <span>{{Label}}</span>\n        \n      <mat-icon *ngIf=\"iconRight\" style=\"margin-left: 8px;\">save</mat-icon>\n    </button></p>\n  `,\n});\nexport const Floating: Story<ButtonComponent> = (args) => ({\n  props: args,\n  template: `\n  <p>  <button mat-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\">\n  <mat-icon>delete</mat-icon>\n </button>&nbsp;&nbsp;<button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\">\n <mat-icon>delete</mat-icon>\n</button></p>\n <p>  <button mat-fab color=\"basic\" aria-label=\"Example icon button with a delete icon\">\n <mat-icon>delete</mat-icon>\n</button>&nbsp;&nbsp;<button mat-mini-fab color=\"basic\" aria-label=\"Example icon button with a delete icon\">\n<mat-icon>delete</mat-icon>\n</button></p>\n<p>  <button mat-fab color=\"warn\" aria-label=\"Example icon button with a delete icon\">\n<mat-icon>delete</mat-icon>\n</button>&nbsp;&nbsp;<button mat-mini-fab color=\"warn\" aria-label=\"Example icon button with a delete icon\">\n<mat-icon>delete</mat-icon>\n</button></p>\n  `,\n});\n\nFloating.parameters = {\n  preview: [\n    {\n      tab: 'HTML',\n      template: previewTemplate`\n<button mat-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\">\n  <mat-icon>delete</mat-icon>\n</button>\n\n//Mini Fab\n<button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\">\n  <mat-icon>delete</mat-icon>\n</button>\n            `,\n      language: 'html',\n      copy: true,\n    },\n  ],\n};\n\nexport const Icon: Story<ButtonComponent> = (args) => ({\n  props: args,\n  template: `\n   <p> <button color=\"primary\" mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\">\n   <mat-icon>more_vert</mat-icon>\n </button></p>\n <p> <button color=\"basic\" mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\">\n <mat-icon>more_vert</mat-icon>\n</button></p>\n<p> <button color=\"warn\" mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\">\n<mat-icon>more_vert</mat-icon>\n</button></p>\n  `,\n});\n\nIcon.parameters = {\n  preview: [\n    {\n      tab: 'HTML',\n      template: previewTemplate`\n<button color=\"primary\" mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\">\n  <mat-icon>more_vert</mat-icon>\n</button>\n            `,\n      language: 'html',\n      copy: true,\n    },\n  ],\n};\n\nexport const Raised = Template.bind({});\nRaised.args = {\n  Label: 'Raised',\n  Type: 'mat-raised-button',\n  Disabled: false,\n  iconLeft: false,\n  iconRight: false,\n};\n\nRaised.parameters = {\n  preview: [\n    {\n      tab: 'HTML',\n      template: previewTemplate`\n<button \nmat-raised-button\ncolor='primary'\ndisabled=${'Disabled'}>\n  <mat-icon *ngIf=${'iconLeft'} style=\"margin-right: 8px;\" >save</mat-icon>\n  <span>${'Label'}</span>\n  <mat-icon *ngIf=\"iconRight\" style=\"margin-left: 8px;\">save</mat-icon>\n</button>\n            `,\n      language: 'html',\n      copy: true,\n    },\n  ],\n};\n\nexport interface PropsOptions {\n  indent?: number;\n  wrap?: string;\n  prefix?: string;\n}\n\nexport const Stroked = Template.bind({});\nStroked.args = {\n  Label: 'Stroked',\n  Type: 'mat-stroked-button',\n  Disabled: false,\n  iconLeft: false,\n  iconRight: false,\n};\n\nStroked.parameters = {\n  preview: [\n    {\n      tab: 'HTML',\n      template: previewTemplate`\n<button \nmat-stroked-button\ncolor='primary'\ndisabled=${'Disabled'}>\n  <mat-icon *ngIf=${'iconLeft'} style=\"margin-right: 8px;\" >save</mat-icon>\n  <span>${'Label'}</span>\n  <mat-icon *ngIf=\"iconRight\" style=\"margin-left: 8px;\">save</mat-icon>\n</button>\n            `,\n      language: 'html',\n      copy: true,\n    },\n  ],\n};\n\nexport const Basic = Template.bind({});\nBasic.args = {\n  Label: 'Basic',\n  Type: 'mat-button',\n  Disabled: false,\n  iconLeft: false,\n  iconRight: false,\n};\n\nBasic.parameters = {\n  preview: [\n    {\n      tab: 'HTML',\n      template: previewTemplate`\n<button \nmat-button\ncolor='primary'\ndisabled=${'Disabled'}>\n  <mat-icon *ngIf=${'iconLeft'} style=\"margin-right: 8px;\" >save</mat-icon>\n  <span>${'Label'}</span>  \n  <mat-icon *ngIf=\"iconRight\" style=\"margin-left: 8px;\">save</mat-icon>\n</button>\n            `,\n      language: 'html',\n      copy: true,\n    },\n  ],\n};",
            "properties": [
                {
                    "name": "indent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 178
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 180
                },
                {
                    "name": "wrap",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 179
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "State",
            "id": "interface-State-9699c506fc2d0605504612de6ec9e72659d59862c9de196f0564de83328906a69f931ccde127f12e45293bec2aab1e967ddfb942a5cb15fa79d3ae09bd03a5cb",
            "file": "src/app/autocomplete/autocomplete.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\n\nexport interface State {\n \n  name: string;\n  population: string;\n  flag: string;\n}\n@Component({\n  selector: 'app-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.css']\n})\nexport class AutocompleteComponent implements OnInit {\n\n  basicCtrl= new FormControl('');\n  stateCtrl = new FormControl('');\n\n  \n\n\n  options: string[] = ['Bananas', 'Apple', 'Orange'];\n\n  @Input()\n  Type: string = 'basic'\n\n  states: State[] = [\n    {\n      name: 'Arkansas',\n      population: '2.978M',\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg',\n    },\n    {\n      name: 'California',\n      population: '39.14M',\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg',\n    },\n    {\n      name: 'Florida',\n      population: '20.27M',\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg',\n    },\n    {\n      name: 'Texas',\n      population: '27.47M',\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg',\n    },\n  ];\n\n  filteredOptions: Observable<string[]>;\n\n\n \n  filteredStates: Observable<State[]>;\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  private _filterStates(value: string): State[] {\n    const filterValue = value.toLowerCase();\n\n    return this.states.filter(state => state.name.toLowerCase().includes(filterValue));\n  }\n\n  ngOnInit() {\n    // this.filteredStates = this.stateCtrl.valueChanges.pipe(\n    //   startWith(''),\n    //   map(state => (state ? this._filterStates(state) : this.states.slice())),\n    // )\n    // this.filteredOptions = this.basicCtrl.valueChanges.pipe(\n    //   startWith(''),\n    //   //@ts-ignore\n    //   map(value => this._filter(value)),\n    // )\n\n  \n\n  }\n\n  constructor() {\n    this.filteredStates = this.stateCtrl.valueChanges.pipe(\n      startWith(''),\n      map(state => (state ? this._filterStates(state) : this.states.slice())),\n    )\n\n    this.filteredOptions = this.basicCtrl.valueChanges.pipe(\n      startWith(''),\n      //@ts-ignore\n      map(value => this._filter(value)),\n    )\n  }\n    \n  }\n\n\n\n\n\n\n\n  \n\n",
            "properties": [
                {
                    "name": "flag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "population",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "UserData",
            "id": "interface-UserData-0de8e89f6dd9725f75e237fb1927d279151e3163ee883fbb605846866b981575179ea50ed5d9cffd9d29d3c659d7c8483af64b4902db221df68568514cacd0dc",
            "file": "src/app/table/table.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  fruit: string;\n}\n\n/** Constants used to fill up our data base. */\nconst FRUITS: string[] = [\n  'blueberry',\n  'lychee',\n  'kiwi',\n  'mango',\n  'peach',\n  'lime',\n  'pomegranate',\n  'pineapple',\n];\nconst NAMES: string[] = [\n  'Maia',\n  'Asher',\n  'Olivia',\n  'Atticus',\n  'Amelia',\n  'Jack',\n  'Charlotte',\n  'Theodore',\n  'Isla',\n  'Oliver',\n  'Isabella',\n  'Jasper',\n  'Cora',\n  'Levi',\n  'Violet',\n  'Arthur',\n  'Mia',\n  'Thomas',\n  'Elizabeth',\n];\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements AfterViewInit {\n\n  displayedColumns: string[] = ['id', 'name', 'progress', 'fruit'];\n  dataSource: MatTableDataSource<UserData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor() {\n    // Create 100 users\n    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\n\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(users);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n  const name =\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\n    ' ' +\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\n    '.';\n\n  return {\n    id: id.toString(),\n    name: name,\n    progress: Math.round(Math.random() * 100).toString(),\n    fruit: FRUITS[Math.round(Math.random() * (FRUITS.length - 1))],\n  };\n\n}\n",
            "properties": [
                {
                    "name": "fruit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "progress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Vegetable",
            "id": "interface-Vegetable-18a5a89e744e13d74fab76f782026294b848694477bf5ef0f2f5c920a32ca86c4cee6c0f95efa556bb9c62ef2c6251651c54ece44d0fdd4abbfb2a1a6a6f3aea",
            "file": "src/app/chip-list/chip-list.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\n\nexport interface Fruit {\n  name: string;\n}\nexport interface Vegetable {\n  name: string;\n}\n\n@Component({\n  selector: 'app-chip-list',\n  templateUrl: './chip-list.component.html',\n  styleUrls: ['./chip-list.component.scss']\n})\nexport class ChipListComponent {\n  addOnBlur = true;\n  readonly separatorKeysCodes = [ENTER, COMMA] as const;\n  fruits: Fruit[] = [{name: 'Lemon'}, {name: 'Lime'}, {name: 'Apple'}];\n\n  add(event: MatChipInputEvent): void {\n    const value = (event.value || '').trim();\n\n    // Add our fruit\n    if (value) {\n      this.fruits.push({name: value});\n    }\n\n    // Clear the input value\n    event.input.value = \"\";\n  }\n\n  remove(fruit: Fruit): void {\n    const index = this.fruits.indexOf(fruit);\n\n    if (index >= 0) {\n      this.fruits.splice(index, 1);\n    }\n  }\n\n\n\n\n@Input()\nType: string[] = ['basic', 'input', 'drag']\n\n\nvegetables: Vegetable[] = [\n  {name: 'apple'},\n  {name: 'banana'},\n  {name: 'strawberry'},\n  {name: 'orange'},\n  {name: 'kiwi'},\n  {name: 'cherry'},\n];\n\ndrop(event: CdkDragDrop<Vegetable[]>) {\n  moveItemInArray(this.vegetables, event.previousIndex, event.currentIndex);\n}\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-d83b95cb897fd7f1ecc7216a31a9167598810a902c9c43ec11b6a93965548994186b900fe348e64bdf35a97b36d2fdb26731097dc1738e7f73bc67d2d432a47c",
            "file": "e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<>",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-0b9afe9226eba848e3934d4e524093fc1551a6d89738d316dd68089be23723007455229a4c256ae0189f08b58264fe3134608563e4a7187c075c714953c13b85",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'storybook-ng-material'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'storybook-ng-material';\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../styles.scss'",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-card class=\"example-card\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>Shiba Inu</mat-card-title>\n    <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n  </mat-card-header>\n  <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\">\n  <mat-card-content>\n    <p>\n      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\n      bred for hunting.\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button>LIKE</button>\n    <button mat-button>SHARE</button>\n  </mat-card-actions>\n</mat-card>\n"
        },
        {
            "name": "AutocompleteComponent",
            "id": "component-AutocompleteComponent-9699c506fc2d0605504612de6ec9e72659d59862c9de196f0564de83328906a69f931ccde127f12e45293bec2aab1e967ddfb942a5cb15fa79d3ae09bd03a5cb",
            "file": "src/app/autocomplete/autocomplete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-autocomplete",
            "styleUrls": [
                "./autocomplete.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./autocomplete.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "Type",
                    "defaultValue": "'basic'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "basicCtrl",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "filteredOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string[]>",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "filteredStates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<State[]>",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "options",
                    "defaultValue": "['Bananas', 'Apple', 'Orange']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "stateCtrl",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "states",
                    "defaultValue": "[\n    {\n      name: 'Arkansas',\n      population: '2.978M',\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg',\n    },\n    {\n      name: 'California',\n      population: '39.14M',\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg',\n    },\n    {\n      name: 'Florida',\n      population: '20.27M',\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg',\n    },\n    {\n      name: 'Texas',\n      population: '27.47M',\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg',\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "State[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "_filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_filterStates",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "State[]",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\n\nexport interface State {\n \n  name: string;\n  population: string;\n  flag: string;\n}\n@Component({\n  selector: 'app-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.css']\n})\nexport class AutocompleteComponent implements OnInit {\n\n  basicCtrl= new FormControl('');\n  stateCtrl = new FormControl('');\n\n  \n\n\n  options: string[] = ['Bananas', 'Apple', 'Orange'];\n\n  @Input()\n  Type: string = 'basic'\n\n  states: State[] = [\n    {\n      name: 'Arkansas',\n      population: '2.978M',\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg',\n    },\n    {\n      name: 'California',\n      population: '39.14M',\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg',\n    },\n    {\n      name: 'Florida',\n      population: '20.27M',\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg',\n    },\n    {\n      name: 'Texas',\n      population: '27.47M',\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg',\n    },\n  ];\n\n  filteredOptions: Observable<string[]>;\n\n\n \n  filteredStates: Observable<State[]>;\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  private _filterStates(value: string): State[] {\n    const filterValue = value.toLowerCase();\n\n    return this.states.filter(state => state.name.toLowerCase().includes(filterValue));\n  }\n\n  ngOnInit() {\n    // this.filteredStates = this.stateCtrl.valueChanges.pipe(\n    //   startWith(''),\n    //   map(state => (state ? this._filterStates(state) : this.states.slice())),\n    // )\n    // this.filteredOptions = this.basicCtrl.valueChanges.pipe(\n    //   startWith(''),\n    //   //@ts-ignore\n    //   map(value => this._filter(value)),\n    // )\n\n  \n\n  }\n\n  constructor() {\n    this.filteredStates = this.stateCtrl.valueChanges.pipe(\n      startWith(''),\n      map(state => (state ? this._filterStates(state) : this.states.slice())),\n    )\n\n    this.filteredOptions = this.basicCtrl.valueChanges.pipe(\n      startWith(''),\n      //@ts-ignore\n      map(value => this._filter(value)),\n    )\n  }\n    \n  }\n\n\n\n\n\n\n\n  \n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-form {\n    min-width: 150px;\n    max-width: 500px;\n    width: 100%;\n  }\n  \n  .example-full-width {\n    width: 100%;\n  }\n  \n  .example-option-img {\n    vertical-align: middle;\n    margin-right: 8px;\n  }\n  \n  [dir='rtl'] .example-option-img {\n    margin-right: 0;\n    margin-left: 8px;\n  }",
                    "styleUrl": "./autocomplete.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 85
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form ><mat-form-field *ngIf=\"Type === 'basic'\"  class=\"example-full-width\" appearance=\"fill\">\n  <mat-label>Autocomplete</mat-label>\n  <input type=\"text\"\n  [required]=\"false\"\n         placeholder=\"Pick one\"\n         aria-label=\"Number\"\n         matInput\n         [formControl]=\"basic\"\n         [matAutocomplete]=\"auto\">\n  <mat-autocomplete #auto=\"matAutocomplete\" [autoActiveFirstOption]=\"autoActiveFirstOption\">\n    <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n      {{option}}\n    </mat-option>\n  </mat-autocomplete>\n</mat-form-field>\n  \n\n\n\n  <mat-form-field *ngIf=\"Type === 'detailed'\" class=\"example-full-width\" appearance=\"fill\" >\n    <mat-label>State</mat-label>\n    <input matInput [required]=\"false\"\n    type=\"text\"\n           aria-label=\"State\"\n           [matAutocomplete]=\"auto\"\n           [formControl]=\"stateCtrl\">\n    <mat-autocomplete #auto=\"matAutocomplete\" [autoActiveFirstOption]=\"autoActiveFirstOption\">\n      <mat-option *ngFor=\"let state of filteredStates | async\" [value]=\"state.name\">\n        <img [alt]=\"stat.flag\" class=\"example-option-img\" aria-hidden [src]=\"state.flag\" height=\"25\">\n        <span>{{state.name}}</span> |\n        <small>Population: {{state.population}}</small>\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</form>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-1f7590843040488db9ca9cb9a02ac9c532bf0adfb15c9ad04ce0ae5c00d76415e8e707f10c1ebb3291a217e7f4cc3176176f4e526353d9673a6224bc784ff5d1",
            "file": "src/app/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "Disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "iconLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "iconRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "Label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "Type",
                    "defaultValue": "['mat-raised-button', 'mat-stroked-button', 'mat-button']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent {\n  @Input()\n  Label: string;\n  @Input()\n  Type: string[] = ['mat-raised-button', 'mat-stroked-button', 'mat-button'];\n  @Input()\n  Disabled: boolean;\n  @Input()\n  iconLeft: boolean;\n  @Input()\n  iconRight: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-card {\n    max-width: 300px;\n}",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<ng-container *ngIf=\"Type === 'mat-raised-button'\"><button mat-raised-button  color=\"primary\" disabled={{Disabled}}><mat-icon *ngIf=\"iconLeft\">save</mat-icon>{{Label}}<mat-icon *ngIf=\"iconRight\">save</mat-icon></button></ng-container>\n<button mat-stroked-button *ngIf=\"Type === 'mat-stroked-button'\" color=\"primary\" disabled={{Disabled}}><mat-icon *ngIf=\"iconLeft\">save</mat-icon>{{Label}}<mat-icon *ngIf=\"iconRight\">save</mat-icon></button>\n<button mat-button *ngIf=\"Type === 'mat-button'\" color=\"primary\" disabled={{Disabled}}><mat-icon *ngIf=\"iconLeft\">save</mat-icon>{{Label}}<mat-icon *ngIf=\"iconRight\">save</mat-icon></button>\n  "
        },
        {
            "name": "ButtonToggleComponent",
            "id": "component-ButtonToggleComponent-0b23bc3f1d0b1e15dd97109813cf5ad4af4db0f8e27ecde1891e1952635ee2c93e99a9ed564c2fdba93626d1c75c5c523fb91be216804dd6e14f223a12f7488a",
            "file": "src/app/button-toggle/button-toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-toggle",
            "styleUrls": [
                "./button-toggle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-toggle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "Label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "Options",
                    "defaultValue": "[\"Option 1\", \"Option 2\", \"Option 3\"]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "selectMultiple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-button-toggle',\n  templateUrl: './button-toggle.component.html',\n  styleUrls: ['./button-toggle.component.scss'],\n})\nexport class ButtonToggleComponent {\n  @Input()\n  Options: string[] = [\"Option 1\", \"Option 2\", \"Option 3\"]\n  @Input()\n  Label: string;\n  @Input()\n  selectMultiple: boolean;\n\n \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-card {\n    max-width: 300px;\n}",
                    "styleUrl": "./button-toggle.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-button-toggle-group class=\"oc\" name=\"fontStyle\" aria-label=\"Font Style\" [multiple]=\"selectMultiple\">\n    <mat-button-toggle *ngFor=\"let item of Options\" value=\"bold\">{{item}}</mat-button-toggle>\n\n  </mat-button-toggle-group>"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-d964531a51999ceb58d8bcf4d60982982f6f04a8332e7e88cd86630980d545fe654609d27d66f521f357b794bb22f9b55ce59bd9c4a461edd78891ba07fe9b81",
            "file": "src/app/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "Action1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "Action2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "Description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "imageSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "Subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "Title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent  {\n\n  @Input() \n  Title:string\n\n  @Input() \n  Description:string\n  \n  @Input() \n  Subtitle:string\n\n  @Input()\n  Action1:string\n\n  @Input()\n  Action2:string\n\n  @Input()\n  imageSrc:string\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-card {\n    max-width: 300px;\n}",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title>{{Title}}</mat-card-title>\n      <mat-card-subtitle>{{Subtitle}}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image [src]=\"imageSrc\" alt=\"Photo of a Shiba Inu\">\n    <mat-card-content>\n      <p>\n       {{Description}}\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button>{{Action1}}</button>\n      <button mat-button>{{Action2}}</button>\n    </mat-card-actions>\n  </mat-card>\n  "
        },
        {
            "name": "ChipListComponent",
            "id": "component-ChipListComponent-18a5a89e744e13d74fab76f782026294b848694477bf5ef0f2f5c920a32ca86c4cee6c0f95efa556bb9c62ef2c6251651c54ece44d0fdd4abbfb2a1a6a6f3aea",
            "file": "src/app/chip-list/chip-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chip-list",
            "styleUrls": [
                "./chip-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chip-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "Type",
                    "defaultValue": "['basic', 'input', 'drag']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addOnBlur",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "fruits",
                    "defaultValue": "[{name: 'Lemon'}, {name: 'Lime'}, {name: 'Apple'}]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Fruit[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "separatorKeysCodes",
                    "defaultValue": "[ENTER, COMMA] as const",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "vegetables",
                    "defaultValue": "[\n  {name: 'apple'},\n  {name: 'banana'},\n  {name: 'strawberry'},\n  {name: 'orange'},\n  {name: 'kiwi'},\n  {name: 'cherry'},\n]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Vegetable[]",
                    "optional": false,
                    "description": "",
                    "line": 50
                }
            ],
            "methodsClass": [
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "event",
                            "type": "MatChipInputEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MatChipInputEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "drop",
                    "args": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<Vegetable[]>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<Vegetable[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "fruit",
                            "type": "Fruit",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fruit",
                            "type": "Fruit",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\n\nexport interface Fruit {\n  name: string;\n}\nexport interface Vegetable {\n  name: string;\n}\n\n@Component({\n  selector: 'app-chip-list',\n  templateUrl: './chip-list.component.html',\n  styleUrls: ['./chip-list.component.scss']\n})\nexport class ChipListComponent {\n  addOnBlur = true;\n  readonly separatorKeysCodes = [ENTER, COMMA] as const;\n  fruits: Fruit[] = [{name: 'Lemon'}, {name: 'Lime'}, {name: 'Apple'}];\n\n  add(event: MatChipInputEvent): void {\n    const value = (event.value || '').trim();\n\n    // Add our fruit\n    if (value) {\n      this.fruits.push({name: value});\n    }\n\n    // Clear the input value\n    event.input.value = \"\";\n  }\n\n  remove(fruit: Fruit): void {\n    const index = this.fruits.indexOf(fruit);\n\n    if (index >= 0) {\n      this.fruits.splice(index, 1);\n    }\n  }\n\n\n\n\n@Input()\nType: string[] = ['basic', 'input', 'drag']\n\n\nvegetables: Vegetable[] = [\n  {name: 'apple'},\n  {name: 'banana'},\n  {name: 'strawberry'},\n  {name: 'orange'},\n  {name: 'kiwi'},\n  {name: 'cherry'},\n];\n\ndrop(event: CdkDragDrop<Vegetable[]>) {\n  moveItemInArray(this.vegetables, event.previousIndex, event.currentIndex);\n}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-chip-list {\n    width: 100%;\n    max-width: 600px;\n}\n\n.example-box.cdk-drag-animating {\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n  }\n  \n  .example-chip .cdk-drop-list-dragging {\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n  }",
                    "styleUrl": "./chip-list.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"mat-typography\">\n\n\n\n  <mat-form-field *ngIf=\"Type === 'input'\" class=\"example-chip-list\">\n    <mat-label>Favorite Fruits</mat-label>\n    <mat-chip-list #chipList aria-label=\"Fruit selection\">\n      <mat-chip *ngFor=\"let fruit of fruits\" selectable\n               removable (removed)=\"remove(fruit)\">\n        {{fruit.name}}\n        <mat-icon matChipRemove>cancel</mat-icon>\n      </mat-chip>\n      <input placeholder=\"New fruit...\"\n             [matChipInputFor]=\"chipList\"\n             matChipInputAddOnBlur\n             (matChipInputTokenEnd)=\"add($event)\">\n    </mat-chip-list>\n  </mat-form-field>\n\n\n<mat-chip-list *ngIf=\"Type === 'basic'\" aria-label=\"Fish selection\" [selectable]=\"false\" >\n  <mat-chip color=\"basic\" disableRipple  selected>Basic <mat-icon matChipTrailingIcon>save</mat-icon></mat-chip>\n  <mat-chip color=\"primary\" disableRipple  selected>Primary</mat-chip>\n  <mat-chip color=\"accent\" disableRipple selected>Accent</mat-chip>\n</mat-chip-list>\n\n<mat-chip-list *ngIf=\"Type === 'drag'\"\n  class=\"example-chip\"\n  cdkDropList \n  cdkDropListOrientation=\"horizontal\"\n  (cdkDropListDropped)=\"drop($event)\">\n  <mat-chip\n    class=\"example-box\"\n    cdkDrag\n    *ngFor=\"let vegetable of vegetables\">\n    {{vegetable.name}}\n  </mat-chip>\n</mat-chip-list>\n</div>"
        },
        {
            "name": "DialogComponent",
            "id": "component-DialogComponent-8d1aaa37c838f55fcd50035ede86b5b1eaaa5f49d0b1fd02ed613a3cc0a32e0c4bcdcf30288dea95dd68c97147c369404fa4c6755aef5b2a817815ee094869c1",
            "file": "src/app/dialog/dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notification",
            "styleUrls": [],
            "styles": [],
            "template": "    <div class=\"mat-typography\">\n    <h1>{{data.title}}</h1>\n    <p>{{data.description}}</p>\n    <button mat-stroked-button color=\"primary\" mat-dialog-close label=\"Okay\">Okay</button>\n</div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DialogData",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\n  import { MAT_DIALOG_DATA } from '@angular/material/dialog';\n \n  interface DialogData {\n    title: string;\n    description: string;\n  }\n@Component({\n  selector: 'app-notification',\n    template: `\n    <div class=\"mat-typography\">\n    <h1>{{data.title}}</h1>\n    <p>{{data.description}}</p>\n    <button mat-stroked-button color=\"primary\" mat-dialog-close label=\"Okay\">Okay</button>\n</div>`\n})\nexport class DialogComponent implements OnInit  {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {\n  }\n\n  ngOnInit(): void {\n  }\n}\n\n\n\n\n  \n \n  \n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "DialogData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ExpansionPanelComponent",
            "id": "component-ExpansionPanelComponent-db4b2b2f759245bcb541b52eff8736f36e01108e2e805ad97ec76ce261717f322256d96ac7a9330ce5fe88526b55b906983fcc715a38898ab5c1b8a5774b542a",
            "file": "src/app/expansion-panel/expansion-panel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-expansion-panel",
            "styleUrls": [
                "./expansion-panel.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./expansion-panel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isProgressive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "accordion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatAccordion",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatAccordion"
                        }
                    ]
                },
                {
                    "name": "step",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "nextStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "prevStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setStep",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatAccordion } from '@angular/material/expansion';\n\n\n@Component({\n  selector: 'app-expansion-panel',\n  templateUrl: './expansion-panel.component.html',\n  styleUrls: ['./expansion-panel.component.scss']\n})\nexport class ExpansionPanelComponent implements OnInit {\n@Input()\nisProgressive: boolean;\n  constructor() { }\n\n  ngOnInit() {\n  }\n  @ViewChild(MatAccordion) accordion: MatAccordion;\n\n  step = 0;\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n.example-action-buttons {\n    padding-bottom: 20px;\n  }\n  \n  .example-headers-align .mat-expansion-panel-header-title,\n  .example-headers-align .mat-expansion-panel-header-description {\n    flex-basis: 0;\n  }\n  \n  .example-headers-align .mat-expansion-panel-header-description {\n    justify-content: space-between;\n    align-items: center;\n  }\n  \n  .example-headers-align .mat-form-field + .mat-form-field {\n    margin-left: 8px;\n  }",
                    "styleUrl": "./expansion-panel.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"isProgressive === false\" class=\"example-action-buttons\">\n  <button mat-stroked-button color=\"accent\" (click)=\"accordion.openAll()\">Expand All</button>\n  <span>&nbsp;&nbsp;</span>\n  <button mat-stroked-button color=\"accent\" (click)=\"accordion.closeAll()\">Collapse All</button>\n</div>\n<div *ngIf=\"isProgressive === false\">\n<mat-accordion class=\"example-headers-align\" multi>\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Personal data\n      </mat-panel-title>\n      <mat-panel-description>\n        Type your name and age\n        <mat-icon>account_circle</mat-icon>\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n\n    <mat-form-field >\n      <mat-label>First name</mat-label>\n      <input matInput>\n    </mat-form-field>\n\n    <mat-form-field >\n      <mat-label>Age</mat-label>\n      <input matInput type=\"number\" min=\"1\">\n    </mat-form-field>\n\n  </mat-expansion-panel>\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Destination\n      </mat-panel-title>\n      <mat-panel-description>\n        Type the country name\n        <mat-icon>map</mat-icon>\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n\n    <mat-form-field >\n      <mat-label>Country</mat-label>\n      <input matInput>\n    </mat-form-field>\n  </mat-expansion-panel>\n\n  <mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Day of the trip\n      </mat-panel-title>\n      <mat-panel-description>\n        Inform the date you wish to travel\n        <mat-icon>date_range</mat-icon>\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n\n    <mat-form-field >\n      <mat-label>Date</mat-label>\n      <input matInput [matDatepicker]=\"picker\" (focus)=\"picker.open()\" readonly>\n    </mat-form-field>\n    <mat-datepicker #picker></mat-datepicker>\n  </mat-expansion-panel>\n</mat-accordion>\n</div>\n<div *ngIf=\"isProgressive === true\">\n<mat-accordion class=\"example-headers-align\">\n  <mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\" hideToggle>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Personal data\n      </mat-panel-title>\n      <mat-panel-description>\n        Type your name and age\n        <mat-icon>account_circle</mat-icon>\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n\n    <mat-form-field>\n      <mat-label>First name</mat-label>\n      <input matInput>\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>Age</mat-label>\n      <input matInput type=\"number\" min=\"1\">\n    </mat-form-field>\n    <mat-action-row>\n      <button mat-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </mat-action-row>\n  </mat-expansion-panel>\n\n  <mat-expansion-panel [expanded]=\"step === 1\" (opened)=\"setStep(1)\" hideToggle>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Destination\n      </mat-panel-title>\n      <mat-panel-description>\n        Type the country name\n        <mat-icon>map</mat-icon>\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n\n    <mat-form-field>\n      <mat-label>Country</mat-label>\n      <input matInput>\n    </mat-form-field>\n\n    <mat-action-row>\n      <button mat-button color=\"warn\" (click)=\"prevStep()\">Previous</button>\n      <button mat-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </mat-action-row>\n  </mat-expansion-panel>\n\n  <mat-expansion-panel [expanded]=\"step === 2\" (opened)=\"setStep(2)\" hideToggle>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Day of the trip\n      </mat-panel-title>\n      <mat-panel-description>\n        Inform the date you wish to travel\n        <mat-icon>date_range</mat-icon>\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n\n    <mat-form-field>\n      <mat-label>Date</mat-label>\n      <input matInput [matDatepicker]=\"picker\" (focus)=\"picker.open()\" readonly>\n    </mat-form-field>\n    <mat-datepicker #picker></mat-datepicker>\n\n    <mat-action-row>\n      <button mat-button color=\"warn\" (click)=\"prevStep()\">Previous</button>\n      <button mat-button color=\"primary\" (click)=\"nextStep()\">End</button>\n    </mat-action-row>\n  </mat-expansion-panel>\n\n</mat-accordion></div>"
        },
        {
            "name": "FormFieldComponent",
            "id": "component-FormFieldComponent-e53ec55141d418f21ee820c9623ee834f5d1c809093734c0eea0f38e382738eab1acc40274682afcd359b7567931ba5ecff6ee42a7d46b9ef72a3c117a1d28ff",
            "file": "src/app/form-field/form-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-field",
            "styleUrls": [
                "./form-field.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./form-field.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "value",
                    "defaultValue": "'Clear me'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-form-field',\n  templateUrl: './form-field.component.html',\n  styleUrls: ['./form-field.component.css']\n})\nexport class FormFieldComponent implements OnInit {\n  value = 'Clear me';\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-container .mat-form-field + .mat-form-field {\n    margin-left: 8px;\n  }\n  \n  .example-right-align {\n    text-align: right;\n  }\n  \n  input.example-right-align::-webkit-outer-spin-button,\n  input.example-right-align::-webkit-inner-spin-button {\n    display: none;\n  }\n  \n  input.example-right-align {\n    -moz-appearance: textfield;\n  }\n\n  .full-width {\n    width: 100%;\n  }\n\n  .input-cancel {\n    color: rgba(0,0,0,.54)\n  }",
                    "styleUrl": "./form-field.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-form-field appearance=\"fill\" floatLabel=\"always\" *ngIf=\"Type === 'input'\">\n  <mat-label>{{ Label }}</mat-label>\n  <span matPrefix>$&nbsp;</span>\n  <span matSuffix>.00</span>\n\n  <input matInput class=\"example-right-align\" placeholder=\"0\" required />\n  <mat-hint>{{ Hint }}</mat-hint>\n</mat-form-field>\n\n<mat-form-field *ngIf=\"Type === 'inputTextArea'\" appearance=\"fill\">\n  <mat-label>Event Description</mat-label>\n  <textarea matInput #textArea placeholder=\"Ex. It makes me feel...\"></textarea>\n  <mat-hint align=\"end\">{{ textArea.value.length }} / 250</mat-hint>\n</mat-form-field>\n\n<mat-form-field *ngIf=\"Type === 'inputSelect'\" appearance=\"fill\">\n  <mat-label>Select me</mat-label>\n  <mat-select>\n    <mat-option value=\"option\">Option</mat-option>\n    <mat-option value=\"option\">Option</mat-option>\n    <mat-option value=\"option\">Option</mat-option>\n    <mat-option value=\"option\">Option</mat-option>\n    <mat-option value=\"option\">Option</mat-option>\n    <mat-option value=\"option\">Option</mat-option>\n  </mat-select>\n  <mat-hint>Here's the dropdown arrow ^</mat-hint>\n</mat-form-field>\n\n<form *ngIf=\"Type === 'inputForm'\" style=\"width: 650px\">\n  <p>\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\n      <mat-label>Event Name</mat-label>\n\n      <input #eventName matInput required  />\n      <button class=\"input-cancel\" *ngIf=\"eventName.value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"eventName.value=''\">\n        <mat-icon>cancel</mat-icon>\n      </button>\n      <mat-hint align=\"end\">{{ eventName.value.length }} / 55</mat-hint>\n     \n    </mat-form-field>\n  </p>\n  <p>\n    <mat-form-field appearance=\"fill\" class=\"full-width\">\n      <mat-label>Event Description</mat-label>\n      <textarea\n        matInput\n        #eventDesc\n        value=\"Our ticket package for the golf event and gala includes access to both events, as well as a round of golf on the day of the tournament. The gala, held in the evening, will feature a sit-down dinner, live music, and a silent auction. fdsa fdsa fdsfads\"\n        required\n        rows=\"3\"\n      ></textarea>\n      <mat-hint align=\"end\">{{ eventDesc.value.length }} / 250</mat-hint>\n    </mat-form-field>\n  </p>\n  <p>\n    <mat-form-field appearance=\"fill\" floatLabel=\"always\" class=\"full-width\">\n      <mat-label>Event Goal</mat-label>\n      <span matPrefix>$&nbsp;</span>\n\n\n      <input matInput  placeholder=\"0\" required />\n      <mat-hint>{{ Hint }}</mat-hint>\n    </mat-form-field>\n  </p>\n</form>\n\n<mat-form-field *ngIf=\"Type === 'inputDate'\" appearance=\"fill\">\n  <mat-label>Choose a date</mat-label>\n  <input matInput [matDatepicker]=\"picker\">\n  <mat-hint>MM/DD/YYYY</mat-hint>\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n  <mat-datepicker #picker></mat-datepicker>\n</mat-form-field>\n"
        },
        {
            "name": "LaunchDialogComponent",
            "id": "component-LaunchDialogComponent-2240a55ff9c7c47848e906193e414daa800a6b26acb5db8d34d54bd92979c6bfe808503c0ef89d571496281c0be43a61323818e411f4eab0e740378bfdb4cd1e",
            "file": "src/stories/Dialog.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-launcher",
            "styleUrls": [],
            "styles": [],
            "template": "<button mat-raised-button color=\"primary\" (click)=\"launch()\"> Launch </button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "description",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "launch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Story, Meta } from '@storybook/angular/types-6-0';\nimport { moduleMetadata } from '@storybook/angular';\nimport { DialogComponent } from 'src/app/dialog/dialog.component';\nimport { ButtonComponent } from 'src/app/button/button.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\n\nimport { Component, Input } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { previewTemplate } from 'storybook-addon-preview';\n\n@Component({\n    selector: 'app-launcher', // <--- 1. add selector\n    template: `\n      <button mat-raised-button color=\"primary\" (click)=\"launch()\"> Launch </button>\n    `\n})\nclass LaunchDialogComponent {\n    @Input() title = '';\n    @Input() description = '';\n    @Input() width = '';\n    constructor(private _dialog: MatDialog) { }\n\n    launch(): void {\n        this._dialog.open(DialogComponent, {\n            autoFocus: false,\n            width: this.width,\n            data: {\n                title: this.title,\n                description: this.description\n            }\n        });\n    }\n}\n\nexport default {\n    title: 'Base Components/Dialog',\n    component: LaunchDialogComponent,\n    decorators: [\n        moduleMetadata({\n            declarations: [DialogComponent], // <--- 2. add component declarations\n            imports: [MatDialogModule, BrowserAnimationsModule, MatButtonModule]\n        })\n    ]\n} as Meta;\n\nconst Template: Story<LaunchDialogComponent> = (args: LaunchDialogComponent) => ({\n    props: args,\n});\n\nexport const Default = Template.bind({});\nDefault.args = {\n    title: 'Title',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam ut ex et tortor auctor fermentum. Curabitur tristique mauris sed mauris feugiat vestibulum. Quisque felis ex, auctor nec lobortis quis',\n    width: '40vw'\n};\n\n\nDefault.parameters = {\n  preview: [\n    {\n      tab: 'HTML',\n      template: previewTemplate`\n<button mat-raised-button color=\"primary\" (click)=\"launch()\">Launch</button>\n            `,\n      language: 'html',\n      copy: true,\n    },\n    {\n      tab: 'Dialog HTML',\n      template: previewTemplate`\n<div class=\"mat-typography\">\n  <h1>${\"title\"}</h1>\n  <p>${'description'}</p>\n  <button mat-stroked-button color=\"primary\" mat-dialog-close label=\"Okay\">Okay</button>\n</div>\n            `,\n      language: 'html',\n      copy: true,\n    },\n  ],\n \n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "_dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ListComponent",
            "id": "component-ListComponent-249f38d83889809ae78add3fd7bc984aa6440ddc4aebded7e479c78888f9af7ad6dc2c0df3c651593b38b65052d1f87904a08231d953a3559524dd5fc0e48ecc",
            "file": "src/app/list/list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-list",
            "styleUrls": [
                "./list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "groceryList",
                    "defaultValue": "['Bananas', 'Apple', 'Pears']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "headerLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string | \"Grocery List\"",
                    "decorators": []
                },
                {
                    "name": "selectionList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean | ",
                    "decorators": []
                },
                {
                    "name": "selectionMultiple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean | ",
                    "decorators": []
                },
                {
                    "name": "showAvatar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean | ",
                    "decorators": []
                },
                {
                    "name": "showHeader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean | ",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n})\nexport class ListComponent {\n  @Input()\n  groceryList: string[] = ['Bananas', 'Apple', 'Pears'];\n  @Input()\n  showHeader: boolean | true;\n  @Input()\n  headerLabel: string | 'Grocery List';\n  @Input()\n  selectionList: boolean | false;\n\n  @Input()\n  selectionMultiple: boolean | false;\n\n  @Input()\n  showAvatar: boolean | false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-card {\n    max-width: 300px;\n}",
                    "styleUrl": "./list.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div *ngIf=\"selectionList === false\">\n  <mat-list role=\"list\">\n    <div mat-subheader *ngIf=\"showHeader\">{{ headerLabel }}</div>\n    <mat-list-item role=\"listitem\" *ngFor=\"let item of groceryList\">\n      <img\n        matListAvatar\n        *ngIf=\"showAvatar\"\n        src=\"https://media.istockphoto.com/vectors/thumbnail-image-vector-graphic-vector-id1147544807?k=20&m=1147544807&s=612x612&w=0&h=pBhz1dkwsCMq37Udtp9sfxbjaMl27JUapoyYpQm0anc=\"\n        alt=\"...\"\n      />\n      <mat-icon *ngIf=\"!showAvatar\" mat-list-icon>restaurant</mat-icon>\n      <h3 matLine>{{ item }}</h3>\n      <h3 matLine>Line 2</h3>\n    </mat-list-item>\n  </mat-list>\n</div>\n\n<div *ngIf=\"selectionList && selectionMultiple\">\n  <mat-selection-list>\n    <div mat-subheader *ngIf=\"showHeader\">{{ headerLabel }}</div>\n    <mat-list-option *ngFor=\"let item of groceryList\">\n      <img\n        matListAvatar\n        *ngIf=\"showAvatar\"\n        src=\"https://media.istockphoto.com/vectors/thumbnail-image-vector-graphic-vector-id1147544807?k=20&m=1147544807&s=612x612&w=0&h=pBhz1dkwsCMq37Udtp9sfxbjaMl27JUapoyYpQm0anc=\"\n        alt=\"...\"\n      />\n      <mat-icon *ngIf=\"!showAvatar\" mat-list-icon>restaurant</mat-icon>\n      <h3 matLine>{{ item }}</h3>\n    </mat-list-option>\n  </mat-selection-list>\n</div>\n<div *ngIf=\"selectionList && !selectionMultiple\">\n  <mat-selection-list [multiple]=\"false\">\n    <div mat-subheader *ngIf=\"showHeader\">{{ headerLabel }}</div>\n    <mat-list-option *ngFor=\"let item of groceryList\">\n      <img\n        matListAvatar\n        *ngIf=\"showAvatar\"\n        src=\"https://media.istockphoto.com/vectors/thumbnail-image-vector-graphic-vector-id1147544807?k=20&m=1147544807&s=612x612&w=0&h=pBhz1dkwsCMq37Udtp9sfxbjaMl27JUapoyYpQm0anc=\"\n        alt=\"...\"\n      />\n      <mat-icon *ngIf=\"!showAvatar\" mat-list-icon>restaurant</mat-icon>\n      <h3 matLine>{{ item }}</h3>\n    </mat-list-option>\n  </mat-selection-list>\n</div>\n"
        },
        {
            "name": "MarkdownComponent",
            "id": "component-MarkdownComponent-5b671b624b1a19b32ce4700097841b603705503b80ba02c6b4892f4982dce191ca787e1e689b2609153dcd68077257f7a6cb1b2c389a188bd431ffe0aba91ed3",
            "file": "src/app/markdown/markdown.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-markdown",
            "styleUrls": [
                "./markdown.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./markdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultTemplate",
                    "defaultValue": "`# Heading level 1\n  ## Heading level 2\n  ### Heading level 3\n  #### Heading level 4\n  ##### Heading level 5\n  ###### Heading level 6\n  **This is bold**\n  - First item\n  - Second item\n  - Third item\n      - Indented item\n      - Indented item\n  - Fourth item`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "maxLengthTemplate",
                    "defaultValue": "`# Max Length Test\n  Errors with more than 50 chars.`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "validationDisabledTemplate",
                    "defaultValue": "`# Test 1\n  <open without closing\n  # Test 2\n  {{ safe`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "updateMarkdown",
                    "args": [
                        {
                            "name": "markdown",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "markdown",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n  selector: 'app-markdown',\n  templateUrl: './markdown.component.html',\n  styleUrls: ['./markdown.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MarkdownComponent {\n  defaultTemplate = `# Heading level 1\n  ## Heading level 2\n  ### Heading level 3\n  #### Heading level 4\n  ##### Heading level 5\n  ###### Heading level 6\n  **This is bold**\n  - First item\n  - Second item\n  - Third item\n      - Indented item\n      - Indented item\n  - Fourth item`;\n  \n    validationDisabledTemplate = `# Test 1\n  <open without closing\n  # Test 2\n  {{ safe`;\n  \n    maxLengthTemplate = `# Max Length Test\n  Errors with more than 50 chars.`\n  \n    updateMarkdown(markdown: string) {\n      console.log(markdown);\n    }\n  constructor() { }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./markdown.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 35
            },
            "templateData": "<core-markdown-display (markdownChange)=\"updateMarkdown($event)\"></core-markdown-display>"
        },
        {
            "name": "MenuComponent",
            "id": "component-MenuComponent-92b2d0587f5252f3934573e0175322f20379b3e7f82057d8043689e4f33407fda503fca99e7a0cf9960685a2fcb782919f4fcce4ef8c01b97e4e4ca2348d23df",
            "file": "src/app/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu",
            "styleUrls": [
                "./menu.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./menu.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"Type === 'basic'\">\n<button mat-button [matMenuTriggerFor]=\"menu\">Menu</button>\n<mat-menu #menu=\"matMenu\" yPosition=\"above\" [overlapTrigger]=\"overlapTrigger\" [hasBackdrop]=\"hasBackdrop\">\n  <button mat-menu-item>Item 1</button>\n  <button mat-menu-item>Item 2</button>\n  <button mat-menu-item disabled>Disabled Item</button>\n</mat-menu>\n</div>\n<div *ngIf=\"Type === 'icon'\">\n<button mat-icon-button [matMenuTriggerFor]=\"menuIcon\" aria-label=\"Example icon-button with a menu\">\n  <mat-icon>more_vert</mat-icon>\n</button>\n<mat-menu #menuIcon=\"matMenu\" [overlapTrigger]=\"overlapTrigger\" [hasBackdrop]=\"hasBackdrop\">\n  <button mat-menu-item>\n    <mat-icon>edit</mat-icon>\n    <span>Edit</span>\n  </button>\n  <button mat-menu-item disabled>\n    <mat-icon>delete</mat-icon>\n    <span>Delete</span>\n  </button>\n  <button mat-menu-item>\n    <mat-icon>visibility</mat-icon>\n    <span>View</span>\n  </button>\n</mat-menu>\n</div>\n<div *ngIf=\"Type === 'nested'\">\n<button mat-button [matMenuTriggerFor]=\"animals\">Animal index</button>\n<mat-menu #animals=\"matMenu\" [overlapTrigger]=\"overlapTrigger\" [hasBackdrop]=\"hasBackdrop\">\n  <button mat-menu-item [matMenuTriggerFor]=\"vertebrates\">Vertebrates</button>\n  <button mat-menu-item [matMenuTriggerFor]=\"invertebrates\">Invertebrates</button>\n</mat-menu>\n\n<mat-menu #vertebrates=\"matMenu\">\n  <button mat-menu-item [matMenuTriggerFor]=\"fish\">Fishes</button>\n  <button mat-menu-item [matMenuTriggerFor]=\"amphibians\">Amphibians</button>\n  <button mat-menu-item [matMenuTriggerFor]=\"reptiles\">Reptiles</button>\n  <button mat-menu-item>Birds</button>\n  <button mat-menu-item>Mammals</button>\n</mat-menu>\n\n<mat-menu #invertebrates=\"matMenu\">\n  <button mat-menu-item>Insects</button>\n  <button mat-menu-item>Molluscs</button>\n  <button mat-menu-item>Crustaceans</button>\n  <button mat-menu-item>Corals</button>\n  <button mat-menu-item>Arachnids</button>\n  <button mat-menu-item>Velvet worms</button>\n  <button mat-menu-item>Horseshoe crabs</button>\n</mat-menu>\n\n<mat-menu #fish=\"matMenu\">\n  <button mat-menu-item>Baikal oilfish</button>\n  <button mat-menu-item>Bala shark</button>\n  <button mat-menu-item>Ballan wrasse</button>\n  <button mat-menu-item>Bamboo shark</button>\n  <button mat-menu-item>Banded killifish</button>\n</mat-menu>\n\n<mat-menu #amphibians=\"matMenu\">\n  <button mat-menu-item>Sonoran desert toad</button>\n  <button mat-menu-item>Western toad</button>\n  <button mat-menu-item>Arroyo toad</button>\n  <button mat-menu-item>Yosemite toad</button>\n</mat-menu>\n\n<mat-menu #reptiles=\"matMenu\">\n  <button mat-menu-item>Banded Day Gecko</button>\n  <button mat-menu-item>Banded Gila Monster</button>\n  <button mat-menu-item>Black Tree Monitor</button>\n  <button mat-menu-item>Blue Spiny Lizard</button>\n  <button mat-menu-item disabled>Velociraptor</button>\n</mat-menu>\n</div>"
        },
        {
            "name": "MetricContainerComponent",
            "id": "component-MetricContainerComponent-79942572c31d707c59ea46a8c3aea189dc8554a2679cd573de81f2855ffa86284472edc7cf5956fa6982576ccc17873bd913f07163791a647bac077c545ef7b8",
            "file": "src/app/metric-container/metric-container.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "core-metric-container",
            "styleUrls": [
                "./metric-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./metric-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'core-metric-container',\n  templateUrl: './metric-container.component.html',\n  styleUrls: ['./metric-container.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MetricContainerComponent { \n\n  @Input()\n  icon: string\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "// background colors\n$bg1: #f5f6f7;\n$bg2: #ecedee;\n$bg3: #e1e3e5;\n\n// white\n$phaas-white: #ffffff;\n$phaas-white-light: rgba($phaas-white, 0.50);\n$phaas-white-lighter: rgba($phaas-white, 0.20);\n$phaas-white-lightest: rgba($phaas-white, 0.12);\n\n// black\n$phaas-black: #0c0916;\n$phaas-black-light: rgba($phaas-black, 0.50);\n$phaas-black-lighter: rgba($phaas-black, 0.20);\n$phaas-black-lightest: rgba($phaas-black, 0.12);\n\n// ink - should only be used for fonts\n$phaas-ink-normal: rgba($phaas-black, 0.8);\n$phaas-ink-secondary: rgba($phaas-black, 0.6);\n$phaas-ink-disabled: rgba($phaas-black, 0.38);\n\n// gray\n$phaas-gray: #575c60;\n$phaas-gray-light: lighten($phaas-gray, 25%);\n$phaas-gray-lighter: lighten($phaas-gray, 55%);\n$phaas-gray-lightest: lighten($phaas-gray, 60%);\n\n// blue\n$phaas-blue: #2e729f;\n$phaas-blue-darker: darken($phaas-blue, 30%);\n$phaas-blue-dark: darken($phaas-blue, 15%);\n$phaas-blue-light: lighten($phaas-blue, 25%);\n$phaas-blue-lighter: lighten($phaas-blue, 50%);\n$phaas-blue-lightest: lighten($phaas-blue, 55%);\n\n$phaas-brand-blue: #337daf;\n\n// teal\n$phaas-teal: #4ac0b2;\n$phaas-teal-darker: darken($phaas-teal, 30%);\n$phaas-teal-dark: darken($phaas-teal, 15%);\n$phaas-teal-light: lighten($phaas-teal, 25%);\n$phaas-teal-lighter: lighten($phaas-teal, 40%);\n\n$phaas-brand-teal: #4ab0b2;\n\n// red\n$phaas-red: #c84026;\n$phaas-red-darker: darken($phaas-red, 30%);\n$phaas-red-dark: darken($phaas-red, 15%);\n$phaas-red-light: lighten($phaas-red, 25%);\n$phaas-red-lighter: lighten($phaas-red, 40%);\n\n// yellow\n$phaas-yellow: #f2be28;\n$phaas-yellow-darker: darken($phaas-yellow, 30%);\n$phaas-yellow-dark: darken($phaas-yellow, 15%);\n$phaas-yellow-light: lighten($phaas-yellow, 25%);\n$phaas-yellow-lighter: lighten($phaas-yellow, 40%);\n\n// green\n$phaas-green: #58cc88;\n$phaas-green-darker: darken($phaas-green, 30%);\n$phaas-green-dark: darken($phaas-green, 15%);\n$phaas-green-light: lighten($phaas-green, 25%);\n$phaas-green-lighter: lighten($phaas-green, 40%);\n\n// gradients\n$phaas-horizontal-gradient: linear-gradient(90deg, $phaas-brand-blue 0%, $phaas-brand-teal 100%);\n$phaas-vertical-gradient: linear-gradient(180deg, $phaas-brand-blue 0%, $phaas-brand-teal 100%);\n$phaas-diagonal-gradient: linear-gradient(135deg, $phaas-brand-blue 0%, $phaas-brand-teal 100%);\n\n// analytics colors\n$phaas-analytics-blue: #0078B9;\n$phaas-analytics-blue-light: #A8C7EB;\n$phaas-analytics-orange: #FF7700;\n$phaas-analytics-orange-light: #FFB86B;\n$phaas-analytics-purple: #9D62C3;\n$phaas-analytics-purple-light: #CAAED8;\n$phaas-analytics-brown: #955348;\n$phaas-analytics-brown-light: #CD9C94;\n$phaas-analytics-pink: #F36DC6;\n$phaas-analytics-pink-light: #FFB2D3;\n$phaas-analytics-pistachio: #BBBF00;\n$phaas-analytics-pistachio-light: #DADC82;\n$phaas-analytics-teal: #00C1D2;\n$phaas-analytics-teal-light: #8DDCE7;\n$phaas-analytics-green: #45AD6D;\n$phaas-analytics-green-light: #B4E55E;\n$phaas-analytics-red: #E02020;\n$phaas-analytics-grey: #C7C7C7;\n\n$phaas-blue-palette: (50: #e6eef3,\n  100: #c0d5e2,\n  200: #97b9cf,\n  300: #6d9cbc,\n  400: #4d87ad,\n  500: #2e729f,\n  600: #296a97,\n  700: #235f8d,\n  800: #1d5583,\n  900: #124272,\n  A100: #a7d0ff,\n  A200: #74b4ff,\n  A400: #4199ff,\n  A700: #288bff,\n  contrast: (50: #000000,\n    100: #000000,\n    200: #000000,\n    300: #000000,\n    400: #ffffff,\n    500: #ffffff,\n    600: #ffffff,\n    700: #ffffff,\n    800: #ffffff,\n    900: #ffffff,\n    A100: #000000,\n    A200: #000000,\n    A400: #000000,\n    A700: #ffffff));\n\n$phaas-yellow-palette: (50: #fdf7e5,\n  100: #fbecbf,\n  200: #f9df94,\n  300: #f6d269,\n  400: #f4c848,\n  500: #f2be28,\n  600: #f0b824,\n  700: #eeaf1e,\n  800: #eca718,\n  900: #e8990f,\n  A100: #ffffff,\n  A200: #fff3e1,\n  A400: #ffdfae,\n  A700: #ffd595,\n  contrast: (50: #000000,\n    100: #000000,\n    200: #000000,\n    300: #000000,\n    400: #000000,\n    500: #000000,\n    600: #000000,\n    700: #000000,\n    800: #000000,\n    900: #000000,\n    A100: #000000,\n    A200: #000000,\n    A400: #000000,\n    A700: #000000));\n\n$phaas-red-palette: (50: #f8e8e5,\n  100: #efc6be,\n  200: #e4a093,\n  300: #d97967,\n  400: #d05d47,\n  500: #c84026,\n  600: #c23a22,\n  700: #bb321c,\n  800: #b42a17,\n  900: #a71c0d,\n  A100: #ffd8d5,\n  A200: #ffa9a2,\n  A400: #ff7a6f,\n  A700: #ff6256,\n  contrast: (50: #000000,\n    100: #000000,\n    200: #000000,\n    300: #000000,\n    400: #ffffff,\n    500: #ffffff,\n    600: #ffffff,\n    700: #ffffff,\n    800: #ffffff,\n    900: #ffffff,\n    A100: #000000,\n    A200: #000000,\n    A400: #000000,\n    A700: #000000));\n\n    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');\n\n.metric-container {\n  font-family: 'Inter';\n  color: rgba($phaas-black, 0.8);\n  display: inline-flex;\n  flex-direction: row;\n  padding: 16px;\n  border-radius: 6px;\n  align-items: center;\n  width: auto;\n  min-width: 400px;\n  box-shadow: 0px 8px 15px -4px #34435e3d;\n  gap: 24px;\n\n}\n\n.metric-container__icon {\n  height: 48px;\n  width: 48px;\n  border-radius: 100%;\n  color: $phaas-blue;\n  background-color: $phaas-blue-lightest;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n}\n\n.metric-container__content {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n\n.metric-container__title {\n  font-size: 12px;\n height: 24px;\n  padding-bottom: 2px;\n  text-transform: uppercase;\n  font-weight: 600;\n  color:rgba($phaas-black, 0.6)\n}\n\n.metric-container__metric {\n  margin: 0;\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 1.125\n}\n\n.metric-container__description {\n  margin-top: 12px;\n  font-size: 12px;\n  text-align: center;\n  color:rgba($phaas-black, 0.6)\n}\n\n.metric-container__description:empty {\n  margin-top: 0px;\n}",
                    "styleUrl": "./metric-container.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"metric-container\">\n  <div class=\"metric-container__icon\">\n    <mat-icon>{{icon}}</mat-icon>\n  </div>\n  <div class=\"metric-container__content\">\n    <div class=\"metric-container__title\">\n      <ng-content select=\"[title]\"></ng-content>\n    </div>\n    <div class=\"metric-container__metric\">\n      <ng-content select=\"[metric]\"></ng-content>\n    </div>\n    <div class=\"metric-container__description\">\n      <ng-content select=\"[description]\"></ng-content>\n    </div>\n  </div>\n \n</div>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-4d67e607aec45a7ce65cfd3101d5b59ba240a92fc7dd21af515741abbe4f9637b4cd41eccfebfb43a0576ffe4cc57f712ac517303a3151a539d0e0aa0c681252",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PaginatorComponent",
            "id": "component-PaginatorComponent-061bbb06a95a4e1388f4ff956a90c33b50b762e73f6bed026c736e1a1e404b140d8dec4abd16f1306e947c1d7a9109f358f5c4a3ad4209b306a158aa009b2131",
            "file": "src/app/paginator/paginator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-paginator",
            "styleUrls": [
                "./paginator.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./paginator.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-paginator',\n  templateUrl: './paginator.component.html',\n  styleUrls: ['./paginator.component.css']\n})\nexport class PaginatorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./paginator.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-paginator [length]=\"200\" [pageSizeOptions]=\"[10, 50, 100]\" aria-label=\"Select page\">\n</mat-paginator>"
        },
        {
            "name": "ProgressBarComponent",
            "id": "component-ProgressBarComponent-a29aeb3db711f4111304f9ce5d008c86c28a62384f647832194a672e45abb1fc269d79112ff6aa9182a3e76c7b3bf4f8d8d315395a91c8107cb0c3cfd6a6f043",
            "file": "src/app/progress-bar/progress-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-progress-bar",
            "styleUrls": [
                "./progress-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./progress-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bufferValue",
                    "defaultValue": "60",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\n",
                    "description": "<p>ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode</p>\n",
                    "line": 32,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProgressBar Color - primary (Theme color) | accent | warn\n",
                    "description": "<p>ProgressBar Color - primary (Theme color) | accent | warn</p>\n",
                    "line": 38,
                    "type": "ThemePalette",
                    "decorators": []
                },
                {
                    "name": "mode",
                    "defaultValue": "'determinate'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProgressBar mode - determinate | indeterminate | Buffer | Query\n",
                    "description": "<p>ProgressBar mode - determinate | indeterminate | Buffer | Query</p>\n",
                    "line": 20,
                    "type": "ProgressBarMode",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "40",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\n",
                    "description": "<p>ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes</p>\n",
                    "line": 26,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\nimport { ProgressBarMode } from '@angular/material/progress-bar';\n@Component({\n  selector: 'app-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.scss']\n})\nexport class ProgressBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n    /**\n   * ProgressBar mode - determinate | indeterminate | Buffer | Query\n   */\n     @Input()\n     mode: ProgressBarMode = 'determinate';\n   \n     /**\n      * ProgressBar Value (0 -100) - Applicable only for Determinate and Buffer modes\n      */\n     @Input()\n     value: number = 40;\n   \n      /**\n      * ProgressBar BufferValue (0 -100) - Applicable only for Buffer mode\n      */\n     @Input()\n     bufferValue: number = 60;\n   \n     /**\n      * ProgressBar Color - primary (Theme color) | accent | warn\n      */\n     @Input()\n     color: ThemePalette = 'primary';\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./progress-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-progress-bar \n    [mode]=\"mode\"\n    [value]=\"value\"\n    [bufferValue]=\"bufferValue\"\n    [color]=\"color\">\n</mat-progress-bar>\n"
        },
        {
            "name": "RadioComponent",
            "id": "component-RadioComponent-99712530aedcbde85a1b832bb63414e812f23de45ed3a146f85ca8fc2747921c52475ed2ef99563744f8787ee5d105b0e525cd2817e4dccf413b0233a7b42435",
            "file": "src/app/radio/radio.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-radio",
            "styleUrls": [
                "./radio.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./radio.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n\n\n\n\n@Component({\n  selector: 'app-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss'],\n})\nexport class RadioComponent {\n\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-card {\n  max-width: 300px;\n}\n\n.mat-radio-group--vertical {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n.example-section {\n  margin: 12px 0;\n}\n\n.example-margin {\n  margin: 0 12px;\n}\n\nul {\n  list-style-type: none;\n  margin-top: 4px;\n}\n",
                    "styleUrl": "./radio.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-radio-group\n  *ngIf=\"Type === 'radio'\"\n  aria-label=\"Select an option\"\n  class=\"mat-radio-group--vertical\"\n>\n  <mat-radio-button value=\"1\" [labelPosition]=\"labelPos\">{{\n    Label\n  }}</mat-radio-button>\n  <mat-radio-button value=\"2\" [labelPosition]=\"labelPos\">{{\n    Label\n  }}</mat-radio-button>\n  <mat-radio-button value=\"2\" disabled [labelPosition]=\"labelPos\"\n    >Disabled</mat-radio-button\n  >\n</mat-radio-group>\n<div *ngIf=\"Type === 'checkbox'\">\n  <section class=\"example-section\">\n    <mat-checkbox class=\"example-margin\" [labelPosition]=\"labelPos\"\n      >Check me!</mat-checkbox\n    >\n    <mat-checkbox\n      class=\"example-margin\"\n      [labelPosition]=\"labelPos\"\n      [disabled]=\"true\"\n      >Disabled</mat-checkbox\n    >\n  </section>\n\n  <section class=\"example-section\">\n    <span class=\"example-list-section\">\n      <mat-checkbox\n        [labelPosition]=\"labelPos\"\n        class=\"example-margin\"\n\n       \n        \n      >\n        Hello\n      </mat-checkbox>\n    </span>\n    <span class=\"example-list-section\">\n      <ul>\n        <li *ngFor=\"let item of subTasks\">\n          <mat-checkbox\n            [labelPosition]=\"labelPos\"\n          >\n           {{ item}}\n          </mat-checkbox>\n        </li>\n       \n      </ul>\n    </span>\n  </section>\n</div>\n<form class=\"mat-radio-group--vertical\" action=\"\" *ngIf=\"Type === 'toggle'\">\n  <mat-slide-toggle [labelPosition]=\"labelPos\" \n    >Slide me!</mat-slide-toggle\n  >\n  <mat-slide-toggle [labelPosition]=\"labelPos\" checked\n    >I am Checked!</mat-slide-toggle\n  >\n  <mat-slide-toggle [labelPosition]=\"labelPos\" disabled \n    >I am disabled!</mat-slide-toggle\n  >\n</form>\n"
        },
        {
            "name": "SidenavComponent",
            "id": "component-SidenavComponent-dc3ec24bdc1b8f8158ac0ba08a2171133bd2a2f2808792093efbc4838fa849d17bba39f7cdbfa3ed0b0032545be5290fc5d6d4536c625535931ef3f93d73ebb4",
            "file": "src/app/sidenav/sidenav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidenav",
            "styleUrls": [
                "./sidenav.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./sidenav.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "showFiller",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.css']\n})\nexport class SidenavComponent implements OnInit {\n  showFiller = false;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-container {\n    width: 100%;\n    height: 90vh;\n  }\n  \n  .example-sidenav-content {\n    display: flex;\n    height: 100%;\n    align-items: center;\n    justify-content: center;\n  }\n  \n  .example-sidenav {\n    width: 600px;\n    padding: 20px;\n  }",
                    "styleUrl": "./sidenav.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-drawer-container class=\"example-container\" autosize>\n  <mat-drawer #drawer class=\"example-sidenav\" mode=\"side\">\n    <p>Auto-resizing sidenav</p>\n    <p *ngIf=\"showFiller\">Lorem, ipsum dolor sit amet consectetur.</p>\n    <button (click)=\"showFiller = !showFiller\" mat-raised-button>\n      Toggle extra text\n    </button>\n  </mat-drawer>\n\n  <div class=\"example-sidenav-content\">\n    <button type=\"button\" mat-button (click)=\"drawer.toggle()\">\n      Toggle sidenav\n    </button>\n  </div>\n\n</mat-drawer-container>\n"
        },
        {
            "name": "SliderComponent",
            "id": "component-SliderComponent-f45c8a03f8b8e8bf993eb1ef279997eaaa3583938653a603f63e638c375a5c4306c4c5b1aa6021335b723c57a582738a48205335e339aa5c6cf5255398836f02",
            "file": "src/app/slider/slider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-slider",
            "styleUrls": [
                "./slider.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./slider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.css']\n})\nexport class SliderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./slider.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-slider\ncolor=\"primary\"\n\nstep=\"10\"\nmin=\"0\"\nmax=\"100\"\naria-label=\"units\"></mat-slider>\n"
        },
        {
            "name": "SnackbarComponent",
            "id": "component-SnackbarComponent-a1a3dd0de05511f2c2d27ae3e152ac58a96cafdf311ee65351c72e210e941f58edb26f462e78a8776cf23d1c96f2e2939378dd3c8a4fbb7568a56152a8893da4",
            "file": "src/app/snackbar/snackbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-snackbar",
            "styleUrls": [
                "./snackbar.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./snackbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "durationInSeconds",
                    "defaultValue": "5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "horizontalPosition",
                    "defaultValue": "'start'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSnackBarHorizontalPosition",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "verticalPosition",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSnackBarVerticalPosition",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "openSnackBar",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent {\n  horizontalPosition: MatSnackBarHorizontalPosition = 'start';\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  durationInSeconds = 5;\n  constructor(private _snackBar: MatSnackBar) {}\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      duration: this.durationInSeconds * 1000,\n    });\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./snackbar.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "\n\n<button mat-stroked-button (click)=\"openSnackBar(message, action)\">Show snack-bar</button>\n"
        },
        {
            "name": "StepperComponent",
            "id": "component-StepperComponent-c2bd1f5e01790df071d7b733eb6fa48036772889b97d9edb4235244cfbef1b25e5d71266fad40f35cae36ac4766fae815688092e4e6f70c8b12b68843cbaa192",
            "file": "src/app/stepper/stepper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stepper",
            "styleUrls": [
                "./stepper.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./stepper.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "firstFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "isLinear",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "secondFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-stepper',\n  templateUrl: './stepper.component.html',\n  styleUrls: ['./stepper.component.scss'],\n\n})\nexport class StepperComponent  implements OnInit {\n  isLinear = false;\n  firstFormGroup: UntypedFormGroup;\n  secondFormGroup: UntypedFormGroup;\n\n  constructor(private _formBuilder: UntypedFormBuilder) {}\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required]\n    });\n  }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./stepper.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "_formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-horizontal-stepper linear #stepper>\n    <mat-step [stepControl]=\"firstFormGroup\">\n      <form [formGroup]=\"firstFormGroup\">\n        <ng-template matStepLabel>Fill out your name</ng-template>\n        <mat-form-field>\n          <mat-label>Name</mat-label>\n          <input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\n        </mat-form-field>\n        <div>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </form>\n    </mat-step>\n    <mat-step [stepControl]=\"secondFormGroup\" label=\"Fill out your address\">\n      <form [formGroup]=\"secondFormGroup\">\n        <mat-form-field>\n          <mat-label>Address</mat-label>\n          <input matInput formControlName=\"secondCtrl\" placeholder=\"Ex. 1 Main St, New York, NY\"\n                 required>\n        </mat-form-field>\n        <div>\n          <button mat-button matStepperPrevious>Back</button>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </form>\n    </mat-step>\n    <mat-step>\n      <ng-template matStepLabel>Done</ng-template>\n      <p>You are now done.</p>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button (click)=\"stepper.reset()\">Reset</button>\n      </div>\n    </mat-step>\n  </mat-horizontal-stepper>"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-0de8e89f6dd9725f75e237fb1927d279151e3163ee883fbb605846866b981575179ea50ed5d9cffd9d29d3c659d7c8483af64b4902db221df68568514cacd0dc",
            "file": "src/app/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [
                "./table.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTableDataSource<UserData>",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['id', 'name', 'progress', 'fruit']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ]
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSort",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatSort"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyFilter",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  fruit: string;\n}\n\n/** Constants used to fill up our data base. */\nconst FRUITS: string[] = [\n  'blueberry',\n  'lychee',\n  'kiwi',\n  'mango',\n  'peach',\n  'lime',\n  'pomegranate',\n  'pineapple',\n];\nconst NAMES: string[] = [\n  'Maia',\n  'Asher',\n  'Olivia',\n  'Atticus',\n  'Amelia',\n  'Jack',\n  'Charlotte',\n  'Theodore',\n  'Isla',\n  'Oliver',\n  'Isabella',\n  'Jasper',\n  'Cora',\n  'Levi',\n  'Violet',\n  'Arthur',\n  'Mia',\n  'Thomas',\n  'Elizabeth',\n];\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements AfterViewInit {\n\n  displayedColumns: string[] = ['id', 'name', 'progress', 'fruit'];\n  dataSource: MatTableDataSource<UserData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor() {\n    // Create 100 users\n    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\n\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(users);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n  const name =\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\n    ' ' +\n    NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\n    '.';\n\n  return {\n    id: id.toString(),\n    name: name,\n    progress: Math.round(Math.random() * 100).toString(),\n    fruit: FRUITS[Math.round(Math.random() * (FRUITS.length - 1))],\n  };\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "table {\n    width: 100%;\n  }\n  \n  .mat-form-field {\n    font-size: 14px;\n    width: 100%;\n  }\n  \n  td, th {\n    width: 25%;\n  }",
                    "styleUrl": "./table.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 56
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<mat-form-field appearance=\"fill\">\n  <mat-label>Filter</mat-label>\n  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n</mat-form-field>\n\n<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\" matSort>\n\n    <!-- ID Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\n    </ng-container>\n\n    <!-- Progress Column -->\n    <ng-container matColumnDef=\"progress\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.progress}}% </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n    </ng-container>\n\n    <!-- Fruit Column -->\n    <ng-container matColumnDef=\"fruit\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Fruit </th>\n      <td mat-cell *matCellDef=\"let row\"> {{row.fruit}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    <!-- Row shown when there is no matching data. -->\n    <tr class=\"mat-row\" *matNoDataRow>\n      <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n    </tr>\n  </table>\n\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" aria-label=\"Select page of users\"></mat-paginator>\n</div>"
        },
        {
            "name": "TabsComponent",
            "id": "component-TabsComponent-8442d52a822275111ea7adac7f261601bb1235f827a1733b49b7620025ecad89f601eb25ae3650673f1ee01331261f95772d99f369f91633e1860d7a7d0d67dd",
            "file": "src/app/tabs/tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tabs",
            "styleUrls": [
                "./tabs.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./tabs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.css']\n})\nexport class TabsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-tab-icon {\n    margin-right: 8px;\n  }",
                    "styleUrl": "./tabs.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-tab-group [headerPosition]=\"Alignment\" [backgroundColor]=\"backgroundColor\" *ngIf=\"Type === 'basic'\">\n  <mat-tab label=\"First\"> Content 1 </mat-tab>\n  <mat-tab label=\"Second\"> Content 2 </mat-tab>\n  <mat-tab label=\"Third\"> Content 3 </mat-tab>\n</mat-tab-group>\n<mat-tab-group [headerPosition]=\"Alignment\" [backgroundColor]=\"backgroundColor\" *ngIf=\"Type === 'icon'\">\n  <mat-tab>\n    <ng-template mat-tab-label>\n      <mat-icon class=\"example-tab-icon\">thumb_up</mat-icon>\n      First\n    </ng-template>\n    Content 1\n  </mat-tab>\n\n  <mat-tab>\n    <ng-template mat-tab-label>\n      <mat-icon class=\"example-tab-icon\">thumb_up</mat-icon>\n      Second\n    </ng-template>\n    Content 2\n  </mat-tab>\n\n  <mat-tab>\n    <ng-template mat-tab-label>\n      <mat-icon class=\"example-tab-icon\">thumb_up</mat-icon>\n      Third\n    </ng-template>\n\n    Content 3\n  </mat-tab>\n</mat-tab-group>"
        },
        {
            "name": "TypeComponent",
            "id": "component-TypeComponent-2e7121a70b69ef89d1b62f39b00362db493185bcc9050e970c144f72c88b57878612d461dfd451213f893707ac93a1ec3dd2e00f4c83abf337079b9c8e215e46",
            "file": "src/app/type/type.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-type",
            "styleUrls": [
                "./type.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./type.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-type',\n  templateUrl: './type.component.html',\n  styleUrls: ['./type.component.scss']\n})\nexport class TypeComponent  {\n\n  @Input() \n  label:string\n\n  @Input()\n  style:string\n\n}\n\nexport const argTypes = {\n  label: {\n    name: 'label',\n    type: { name: 'string', required: false },\n    defaultValue: 'Hello',\n    description: 'demo description',\n    table: {\n      type: { summary: 'string' },\n      defaultValue: { summary: 'Hello' },\n    },\n    control: {\n      type: 'text'\n    }\n  }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-card {\n    max-width: 300px;\n}",
                    "styleUrl": "./type.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p [class]=\"style\">{{label}}</p>\n  "
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-46f896da02a43ee15cad7a66531a0d42d22ac86e8dfecbcccfb290ae98e3534c7225bd6743498bf53173b556bad06d19b53fe3dfb6a712158110ef71d8722b7d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { StepperComponent } from './stepper/stepper.component';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatInputModule} from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatCardModule} from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MAT_FORM_FIELD_DEFAULT_OPTIONS} from '@angular/material/form-field';\nimport { DemoMaterialModule } from './material.module';\nimport { MatListModule } from '@angular/material/list';\nimport {MatChipsModule, MAT_CHIPS_DEFAULT_OPTIONS} from '@angular/material/chips';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport { MarkdownDisplayModule } from '@onecause/core';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\n\n\nimport {MatFormFieldModule} from '@angular/material/form-field'; \nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { CardComponent } from './card/card.component' \nimport { MetricContainerModule } from './metric-container';\nimport { ListComponent } from './list/list.component';\nimport { ButtonComponent } from './button/button.component';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { ButtonToggleComponent } from './button-toggle/button-toggle.component';\nimport { ChipListComponent } from './chip-list/chip-list.component';\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\nimport { ExpansionPanelComponent } from './expansion-panel/expansion-panel.component';\nimport {MatAccordion} from '@angular/material/expansion';\nimport { MenuComponent } from './menu/menu.component';\nimport { FormFieldComponent } from './form-field/form-field.component';\nimport { SliderComponent } from './slider/slider.component';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { SnackbarComponent } from './snackbar/snackbar.component';\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport { PaginatorComponent } from './paginator/paginator.component';\nimport { TableComponent } from './table/table.component';\nimport { SidenavComponent } from './sidenav/sidenav.component';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { MarkdownComponent } from './markdown/markdown.component';\nimport { MarkdownDisplayComponent } from '@onecause/core';\n\n@NgModule({\n  declarations: [\t\t\t\t\t\t\t\t\t\t\t\t\t\n    AppComponent,\n    ProgressBarComponent,\n    StepperComponent,\n    CardComponent,\n    ListComponent,\n    ButtonComponent,\n    ButtonToggleComponent,\n      ChipListComponent,\n      ExpansionPanelComponent,\n      MenuComponent,\n      FormFieldComponent,\n      SliderComponent,\n      TabsComponent,\n      SnackbarComponent,\n      AutocompleteComponent,\n      PaginatorComponent,\n      TableComponent,\n      SidenavComponent,\n      DialogComponent,\n      MarkdownComponent,\n      \n   ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MarkdownDisplayModule,\n    DemoMaterialModule,\n\n\n  ],\n\n  \n\n  providers: [\n      { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'outline' } },\n    {\n      provide: MAT_CHIPS_DEFAULT_OPTIONS,\n      useValue: {\n        separatorKeyCodes: [ENTER, COMMA]\n      }\n    },\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "AutocompleteComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ButtonToggleComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "ChipListComponent"
                        },
                        {
                            "name": "DialogComponent"
                        },
                        {
                            "name": "ExpansionPanelComponent"
                        },
                        {
                            "name": "FormFieldComponent"
                        },
                        {
                            "name": "ListComponent"
                        },
                        {
                            "name": "MarkdownComponent"
                        },
                        {
                            "name": "MenuComponent"
                        },
                        {
                            "name": "PaginatorComponent"
                        },
                        {
                            "name": "ProgressBarComponent"
                        },
                        {
                            "name": "SidenavComponent"
                        },
                        {
                            "name": "SliderComponent"
                        },
                        {
                            "name": "SnackbarComponent"
                        },
                        {
                            "name": "StepperComponent"
                        },
                        {
                            "name": "TableComponent"
                        },
                        {
                            "name": "TabsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DemoMaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DemoMaterialModule",
            "id": "module-DemoMaterialModule-6a729809c22d1f86ac4eb7b8c8f6675da39b0269ced13f61d240bc0e354d7b020d75e534f8ef3701b00cf054ded4fe7e4d000ce4855bb678b719e9e69f155993",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/material.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    BrowserAnimationsModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2020 Google LLC. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MetricContainerModule",
            "id": "module-MetricContainerModule-59f4817f54ddb34206a2e31654fd9e13085756f4e03211b328378f9197fd7a34c9058bab14fc94aeada2cad73c336a01b50e8f08b448e22b8d6b831115aa7b21",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/metric-container/metric-container.module.ts",
            "methods": [],
            "sourceCode": "import { Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MetricContainerComponent } from './metric-container.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    MetricContainerComponent\n  ],\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  exports: [\n    MetricContainerComponent\n  ]\n})\nexport class MetricContainerModule {\n\n }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "MetricContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MetricContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Markdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  markdownChange: action('updateMarkdown'),\n}"
            },
            {
                "name": "argTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/type/type.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  label: {\n    name: 'label',\n    type: { name: 'string', required: false },\n    defaultValue: 'Hello',\n    description: 'demo description',\n    table: {\n      type: { summary: 'string' },\n      defaultValue: { summary: 'Hello' },\n    },\n    control: {\n      type: 'text'\n    }\n  }\n}"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button-Toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "ListTemplate.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ExpansionPanel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Metriccard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Paginator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "basicList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/List.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Buffer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Progressbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Checkbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Radio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "DatePicker",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/FormField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Detailed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Determinate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Progressbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Drag",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "ListTemplate.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Floating",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args) => ({\n  props: args,\n  template: `\n  <p>  <button mat-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\">\n  <mat-icon>delete</mat-icon>\n </button>&nbsp;&nbsp;<button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\">\n <mat-icon>delete</mat-icon>\n</button></p>\n <p>  <button mat-fab color=\"basic\" aria-label=\"Example icon button with a delete icon\">\n <mat-icon>delete</mat-icon>\n</button>&nbsp;&nbsp;<button mat-mini-fab color=\"basic\" aria-label=\"Example icon button with a delete icon\">\n<mat-icon>delete</mat-icon>\n</button></p>\n<p>  <button mat-fab color=\"warn\" aria-label=\"Example icon button with a delete icon\">\n<mat-icon>delete</mat-icon>\n</button>&nbsp;&nbsp;<button mat-mini-fab color=\"warn\" aria-label=\"Example icon button with a delete icon\">\n<mat-icon>delete</mat-icon>\n</button></p>\n  `,\n})"
            },
            {
                "name": "Form",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/FormField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FRUITS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/table/table.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string[]",
                "defaultValue": "[\n  'blueberry',\n  'lychee',\n  'kiwi',\n  'mango',\n  'peach',\n  'lime',\n  'pomegranate',\n  'pineapple',\n]",
                "rawdescription": "Constants used to fill up our data base.",
                "description": "<p>Constants used to fill up our data base.</p>\n"
            },
            {
                "name": "Full",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Horizontal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args) => ({\n  props: args,\n  template: `\n   <p> <button color=\"primary\" mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\">\n   <mat-icon>more_vert</mat-icon>\n </button></p>\n <p> <button color=\"basic\" mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\">\n <mat-icon>more_vert</mat-icon>\n</button></p>\n<p> <button color=\"warn\" mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\">\n<mat-icon>more_vert</mat-icon>\n</button></p>\n  `,\n})"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Indeterminate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Progressbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Input",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "ListTemplate.bind({})"
            },
            {
                "name": "Input",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/FormField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ListTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ChipListComponent>",
                "defaultValue": "(args: ChipListComponent) => ({\n\n  props: args,\n})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Multiple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button-Toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NAMES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/table/table.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string[]",
                "defaultValue": "[\n  'Maia',\n  'Asher',\n  'Olivia',\n  'Atticus',\n  'Amelia',\n  'Jack',\n  'Charlotte',\n  'Theodore',\n  'Isla',\n  'Oliver',\n  'Isabella',\n  'Jasper',\n  'Cora',\n  'Levi',\n  'Violet',\n  'Arthur',\n  'Mia',\n  'Thomas',\n  'Elizabeth',\n]"
            },
            {
                "name": "Nested",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Markdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  \n  props: {\n    markdownChange: actionsData.markdownChange,\n    defaultTemplate: '###Hello',\n    maxLength: '1200',\n    showEditor: true\n  },\n\n})"
            },
            {
                "name": "Progressive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ExpansionPanel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Query",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Progressbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Radio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Radio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Raised",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Select",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/FormField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "selectionList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/List.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "selectionListSingle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/List.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SlideToggle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Radio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Stroked",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<AutocompleteComponent>",
                "defaultValue": "(args: AutocompleteComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: args,\n  template: `\n  <button mat-raised-button\n  [matBadge]=\"label\" [matBadgePosition]=\"position\" [matBadgeColor]=\"color\" [matBadgeSize]=\"size\">\nAction\n</button>`\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button-Toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonToggleComponent>",
                "defaultValue": "(args: ButtonToggleComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: args,\n  argTypes: {\n    Label: { control: 'text' },\n    // Color: { control: 'select', defaultValue:'primary', options: ['primary', 'accent', 'warn'] },\n    Type: {\n      control: 'select',\n      options: ['mat-raised-button', 'mat-stroked-button', 'mat-button'],\n      table: { disable: true },\n    },\n    Disabled: { control: 'boolean' },\n    iconLeft: { control: 'boolean' },\n    iconRight: { control: 'boolean' },\n  },\n  template: `\n   <p> <button \n    mat-button\n    [class]=\"Type\"\n    color=\"primary\"\n    [disabled]=\"Disabled\">\n    <mat-icon *ngIf=\"iconLeft\" style=\"margin-right: 8px;\" >save</mat-icon>\n        <span>{{Label}}</span>\n        \n      <mat-icon *ngIf=\"iconRight\" style=\"margin-left: 8px;\">save</mat-icon>\n    </button></p>\n    <p><button \n    mat-button\n    [class]=\"Type\"\n    color=\"basic\"\n    [disabled]=\"Disabled\">\n    <mat-icon *ngIf=\"iconLeft\" style=\"margin-right: 8px;\" >save</mat-icon>\n        <span>{{Label}}</span>\n        \n      <mat-icon *ngIf=\"iconRight\" style=\"margin-left: 8px;\">save</mat-icon>\n    </button></p>\n    <p><button \n    mat-button\n    [class]=\"Type\"\n    color=\"warn\"\n    [disabled]=\"Disabled\">\n    <mat-icon *ngIf=\"iconLeft\" style=\"margin-right: 8px;\" >save</mat-icon>\n        <span>{{Label}}</span>\n        \n      <mat-icon *ngIf=\"iconRight\" style=\"margin-left: 8px;\">save</mat-icon>\n    </button></p>\n  `,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CardComponent>",
                "defaultValue": "(args: CardComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LaunchDialogComponent>",
                "defaultValue": "(args: LaunchDialogComponent) => ({\n    props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/ExpansionPanel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ExpansionPanelComponent>",
                "defaultValue": "(args: ExpansionPanelComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/List.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ListComponent>",
                "defaultValue": "(args: ListComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/FormField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FormFieldComponent>",
                "defaultValue": "(args: FormFieldComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<MenuComponent>",
                "defaultValue": "(args: MenuComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Metriccard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<MetricContainerComponent>",
                "defaultValue": "(args: MetricContainerComponent) => ({\n    template: `    <core-metric-container [icon]=\"icon\">\n    <div title>{{title}}</div>\n    <div metric>{{metric}}</div>\n    <div description>{{description}}</div>\n</core-metric-container>`,\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Progressbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ProgressBarComponent>",
                "defaultValue": "(args: ProgressBarComponent) => ({\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Paginator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PaginatorComponent>",
                "defaultValue": "(args: PaginatorComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Radio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<RadioComponent>",
                "defaultValue": "(args: RadioComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Sidenav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SidenavComponent>",
                "defaultValue": "(args: SidenavComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Slider.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SliderComponent>",
                "defaultValue": "(args: SliderComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Snackbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SnackbarComponent>",
                "defaultValue": "(args: SnackbarComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<StepperComponent>",
                "defaultValue": "(args: StepperComponent) => ({\n    props: args,\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TableComponent>",
                "defaultValue": "(args: TableComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TabsComponent>",
                "defaultValue": "(args: TabsComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: args,\n  template: `\n<button mat-raised-button\nmatTooltip=\"Info about the action\"\naria-label=\"Button that displays a tooltip when focused or hovered over\">\n  Action\n</button>`\n})"
            },
            {
                "name": "TextArea",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/FormField.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [
            {
                "name": "ANGULAR_PROPS_TEMPLATE",
                "file": "src/stories/FormField.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "arg0",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "arg1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "arg0",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "arg1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "ANGULAR_PROPS_TEMPLATE",
                "file": "src/stories/Menu.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "arg0",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "arg1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "arg0",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "arg1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "ANGULAR_PROPS_TEMPLATE",
                "file": "src/stories/Radio.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "arg0",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "arg1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "arg0",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "arg1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "ANGULAR_PROPS_TEMPLATE",
                "file": "src/stories/Slider.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "arg0",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "arg1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "arg0",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "arg1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "ANGULAR_PROPS_TEMPLATE",
                "file": "src/stories/Snackbar.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "arg0",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "arg1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "arg0",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "arg1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "ANGULAR_PROPS_TEMPLATE",
                "file": "src/stories/Tabs.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "arg0",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "arg1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "arg0",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "arg1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "createNewUser",
                "file": "src/app/table/table.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Builds and returns a new User.</p>\n",
                "args": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "UserData",
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/Markdown.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Markdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  markdownChange: action('updateMarkdown'),\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Markdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  \n  props: {\n    markdownChange: actionsData.markdownChange,\n    defaultTemplate: '###Hello',\n    maxLength: '1200',\n    showEditor: true\n  },\n\n})"
                }
            ],
            "src/app/type/type.component.ts": [
                {
                    "name": "argTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/type/type.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  label: {\n    name: 'label',\n    type: { name: 'string', required: false },\n    defaultValue: 'Hello',\n    description: 'demo description',\n    table: {\n      type: { summary: 'string' },\n      defaultValue: { summary: 'Hello' },\n    },\n    control: {\n      type: 'text'\n    }\n  }\n}"
                }
            ],
            "src/stories/Autocomplete.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Detailed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<AutocompleteComponent>",
                    "defaultValue": "(args: AutocompleteComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Badge.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: args,\n  template: `\n  <button mat-raised-button\n  [matBadge]=\"label\" [matBadgePosition]=\"position\" [matBadgeColor]=\"color\" [matBadgeSize]=\"size\">\nAction\n</button>`\n})"
                }
            ],
            "src/stories/Button-Toggle.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button-Toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Multiple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button-Toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button-Toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonToggleComponent>",
                    "defaultValue": "(args: ButtonToggleComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Floating",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args) => ({\n  props: args,\n  template: `\n  <p>  <button mat-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\">\n  <mat-icon>delete</mat-icon>\n </button>&nbsp;&nbsp;<button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\">\n <mat-icon>delete</mat-icon>\n</button></p>\n <p>  <button mat-fab color=\"basic\" aria-label=\"Example icon button with a delete icon\">\n <mat-icon>delete</mat-icon>\n</button>&nbsp;&nbsp;<button mat-mini-fab color=\"basic\" aria-label=\"Example icon button with a delete icon\">\n<mat-icon>delete</mat-icon>\n</button></p>\n<p>  <button mat-fab color=\"warn\" aria-label=\"Example icon button with a delete icon\">\n<mat-icon>delete</mat-icon>\n</button>&nbsp;&nbsp;<button mat-mini-fab color=\"warn\" aria-label=\"Example icon button with a delete icon\">\n<mat-icon>delete</mat-icon>\n</button></p>\n  `,\n})"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args) => ({\n  props: args,\n  template: `\n   <p> <button color=\"primary\" mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\">\n   <mat-icon>more_vert</mat-icon>\n </button></p>\n <p> <button color=\"basic\" mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\">\n <mat-icon>more_vert</mat-icon>\n</button></p>\n<p> <button color=\"warn\" mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\">\n<mat-icon>more_vert</mat-icon>\n</button></p>\n  `,\n})"
                },
                {
                    "name": "Raised",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Stroked",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: args,\n  argTypes: {\n    Label: { control: 'text' },\n    // Color: { control: 'select', defaultValue:'primary', options: ['primary', 'accent', 'warn'] },\n    Type: {\n      control: 'select',\n      options: ['mat-raised-button', 'mat-stroked-button', 'mat-button'],\n      table: { disable: true },\n    },\n    Disabled: { control: 'boolean' },\n    iconLeft: { control: 'boolean' },\n    iconRight: { control: 'boolean' },\n  },\n  template: `\n   <p> <button \n    mat-button\n    [class]=\"Type\"\n    color=\"primary\"\n    [disabled]=\"Disabled\">\n    <mat-icon *ngIf=\"iconLeft\" style=\"margin-right: 8px;\" >save</mat-icon>\n        <span>{{Label}}</span>\n        \n      <mat-icon *ngIf=\"iconRight\" style=\"margin-left: 8px;\">save</mat-icon>\n    </button></p>\n    <p><button \n    mat-button\n    [class]=\"Type\"\n    color=\"basic\"\n    [disabled]=\"Disabled\">\n    <mat-icon *ngIf=\"iconLeft\" style=\"margin-right: 8px;\" >save</mat-icon>\n        <span>{{Label}}</span>\n        \n      <mat-icon *ngIf=\"iconRight\" style=\"margin-left: 8px;\">save</mat-icon>\n    </button></p>\n    <p><button \n    mat-button\n    [class]=\"Type\"\n    color=\"warn\"\n    [disabled]=\"Disabled\">\n    <mat-icon *ngIf=\"iconLeft\" style=\"margin-right: 8px;\" >save</mat-icon>\n        <span>{{Label}}</span>\n        \n      <mat-icon *ngIf=\"iconRight\" style=\"margin-left: 8px;\">save</mat-icon>\n    </button></p>\n  `,\n})"
                }
            ],
            "src/stories/Chip.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "ListTemplate.bind({})"
                },
                {
                    "name": "Drag",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "ListTemplate.bind({})"
                },
                {
                    "name": "Input",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "ListTemplate.bind({})"
                },
                {
                    "name": "ListTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ChipListComponent>",
                    "defaultValue": "(args: ChipListComponent) => ({\n\n  props: args,\n})"
                }
            ],
            "src/stories/ExpansionPanel.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ExpansionPanel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Progressive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ExpansionPanel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/ExpansionPanel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ExpansionPanelComponent>",
                    "defaultValue": "(args: ExpansionPanelComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Menu.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Nested",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<MenuComponent>",
                    "defaultValue": "(args: MenuComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Metriccard.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Metriccard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Metriccard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<MetricContainerComponent>",
                    "defaultValue": "(args: MetricContainerComponent) => ({\n    template: `    <core-metric-container [icon]=\"icon\">\n    <div title>{{title}}</div>\n    <div metric>{{metric}}</div>\n    <div description>{{description}}</div>\n</core-metric-container>`,\n    props: args,\n  })"
                }
            ],
            "src/stories/Paginator.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Paginator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Paginator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PaginatorComponent>",
                    "defaultValue": "(args: PaginatorComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Sidenav.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Sidenav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SidenavComponent>",
                    "defaultValue": "(args: SidenavComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Snackbar.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Snackbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SnackbarComponent>",
                    "defaultValue": "(args: SnackbarComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Table.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TableComponent>",
                    "defaultValue": "(args: TableComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Tabs.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TabsComponent>",
                    "defaultValue": "(args: TabsComponent) => ({\n  props: args,\n})"
                },
                {
                    "name": "WithIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Tooltip.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: args,\n  template: `\n<button mat-raised-button\nmatTooltip=\"Info about the action\"\naria-label=\"Button that displays a tooltip when focused or hovered over\">\n  Action\n</button>`\n})"
                }
            ],
            "src/stories/List.stories.ts": [
                {
                    "name": "basicList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/List.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "selectionList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/List.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "selectionListSingle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/List.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/List.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ListComponent>",
                    "defaultValue": "(args: ListComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Progressbar.stories.ts": [
                {
                    "name": "Buffer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Progressbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Determinate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Progressbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Indeterminate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Progressbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Query",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Progressbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Progressbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ProgressBarComponent>",
                    "defaultValue": "(args: ProgressBarComponent) => ({\n    props: args,\n  })"
                }
            ],
            "src/stories/Radio.stories.ts": [
                {
                    "name": "Checkbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Radio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Radio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Radio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SlideToggle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Radio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Radio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<RadioComponent>",
                    "defaultValue": "(args: RadioComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/stories/FormField.stories.ts": [
                {
                    "name": "DatePicker",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/FormField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Form",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/FormField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Input",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/FormField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Select",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/FormField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/FormField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FormFieldComponent>",
                    "defaultValue": "(args: FormFieldComponent) => ({\n  props: args,\n})"
                },
                {
                    "name": "TextArea",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/FormField.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/Dialog.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LaunchDialogComponent>",
                    "defaultValue": "(args: LaunchDialogComponent) => ({\n    props: args,\n})"
                }
            ],
            "src/stories/Slider.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Slider.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SliderComponent>",
                    "defaultValue": "(args: SliderComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/table/table.component.ts": [
                {
                    "name": "FRUITS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/table/table.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "defaultValue": "[\n  'blueberry',\n  'lychee',\n  'kiwi',\n  'mango',\n  'peach',\n  'lime',\n  'pomegranate',\n  'pineapple',\n]",
                    "rawdescription": "Constants used to fill up our data base.",
                    "description": "<p>Constants used to fill up our data base.</p>\n"
                },
                {
                    "name": "NAMES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/table/table.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "defaultValue": "[\n  'Maia',\n  'Asher',\n  'Olivia',\n  'Atticus',\n  'Amelia',\n  'Jack',\n  'Charlotte',\n  'Theodore',\n  'Isla',\n  'Oliver',\n  'Isabella',\n  'Jasper',\n  'Cora',\n  'Levi',\n  'Violet',\n  'Arthur',\n  'Mia',\n  'Thomas',\n  'Elizabeth',\n]"
                }
            ],
            "src/stories/Card.stories.ts": [
                {
                    "name": "Full",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CardComponent>",
                    "defaultValue": "(args: CardComponent) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Stepper.stories.ts": [
                {
                    "name": "Horizontal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<StepperComponent>",
                    "defaultValue": "(args: StepperComponent) => ({\n    props: args,\n  })"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {
            "src/stories/FormField.stories.ts": [
                {
                    "name": "ANGULAR_PROPS_TEMPLATE",
                    "file": "src/stories/FormField.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "arg0",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "arg1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "arg0",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "arg1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/stories/Menu.stories.ts": [
                {
                    "name": "ANGULAR_PROPS_TEMPLATE",
                    "file": "src/stories/Menu.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "arg0",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "arg1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "arg0",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "arg1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/stories/Radio.stories.ts": [
                {
                    "name": "ANGULAR_PROPS_TEMPLATE",
                    "file": "src/stories/Radio.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "arg0",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "arg1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "arg0",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "arg1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/stories/Slider.stories.ts": [
                {
                    "name": "ANGULAR_PROPS_TEMPLATE",
                    "file": "src/stories/Slider.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "arg0",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "arg1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "arg0",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "arg1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/stories/Snackbar.stories.ts": [
                {
                    "name": "ANGULAR_PROPS_TEMPLATE",
                    "file": "src/stories/Snackbar.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "arg0",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "arg1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "arg0",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "arg1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/stories/Tabs.stories.ts": [
                {
                    "name": "ANGULAR_PROPS_TEMPLATE",
                    "file": "src/stories/Tabs.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "arg0",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "arg1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "arg0",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "arg1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/table/table.component.ts": [
                {
                    "name": "createNewUser",
                    "file": "src/app/table/table.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Builds and returns a new User.</p>\n",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "UserData",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/autocomplete/autocomplete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AutocompleteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/autocomplete/autocomplete.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/button-toggle/button-toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/chip-list/chip-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/chip-list/chip-list.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Fruit",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/chip-list/chip-list.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Vegetable",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/dialog/dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/dialog/dialog.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DialogData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/expansion-panel/expansion-panel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpansionPanelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/form-field/form-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/list/list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/markdown/markdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MarkdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/metric-container/metric-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MetricContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/paginator/paginator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/progress-bar/progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressBarComponent",
                "coveragePercent": 57,
                "coverageCount": "4/7",
                "status": "good"
            },
            {
                "filePath": "src/app/radio/radio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/sidenav/sidenav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidenavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/slider/slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/snackbar/snackbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SnackbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/stepper/stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/table/table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/table/table.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createNewUser",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/table/table.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FRUITS",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/table/table.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NAMES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tabs/tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/type/type.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/type/type.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "argTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Detailed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button-Toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button-Toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Multiple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button-Toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PropsOptions",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Floating",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Raised",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Stroked",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Full",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Drag",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Input",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ListTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Dialog.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "LaunchDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/Dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ExpansionPanel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ExpansionPanel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Progressive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/ExpansionPanel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/FormField.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ANGULAR_PROPS_TEMPLATE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/FormField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DatePicker",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/FormField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Form",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/FormField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Input",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/FormField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Select",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/FormField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/FormField.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextArea",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/List.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "basicList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/List.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectionList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/List.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectionListSingle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/List.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Markdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Markdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Menu.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ANGULAR_PROPS_TEMPLATE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Nested",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Metriccard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Metriccard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Paginator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Paginator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Buffer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Determinate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Indeterminate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Query",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Radio.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ANGULAR_PROPS_TEMPLATE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Radio.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checkbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Radio.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Radio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Radio.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SlideToggle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Radio.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Sidenav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Slider.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ANGULAR_PROPS_TEMPLATE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Slider.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Snackbar.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ANGULAR_PROPS_TEMPLATE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Snackbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Horizontal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tabs.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ANGULAR_PROPS_TEMPLATE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}